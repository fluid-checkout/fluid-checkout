{"version":3,"file":"../../automation-web-platform/checkout-automation-web-platform-327-beta-8.min.js","sources":["automation-web-platform/checkout-automation-web-platform-327-beta-8.js"],"sourcesContent":["/**\r\n * Checkout scripts for: Wawp - OTP Verification, Order Notifications, and Country Code Selector for WooCommerce (by Wawp).\r\n */\r\n\r\n(function (root, factory) {\r\n\tif ( typeof define === 'function' && define.amd ) {\r\n\t\tdefine([], factory(root));\r\n\t} else if ( typeof exports === 'object' ) {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\troot.CheckoutWAWP= factory(root);\r\n\t}\r\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\r\n\r\n\t'use strict';\r\n\r\n\tvar $ = jQuery;\r\n\tvar _hasJQuery = ( $ != null );\r\n\r\n\tvar _hasInitialized = false;\r\n\tvar _publicMethods = {};\r\n\tvar _settings = {\r\n\t\tphoneFieldSelector: '#billing_phone',\r\n\t\tsuccessMessageSelector: '.fc-wawp-message.woocommerce-success',\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * METHODS\r\n\t */\r\n\r\n\r\n\r\n\t/**\r\n\t * Trigger update checkout.\r\n\t */\r\n\tvar triggerCheckoutUpdate = function() {\r\n\t\t// Trigger update checkout\r\n\t\t$( document.body ).trigger( 'update_checkout' );\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear success messages from the plugin.\r\n\t */\r\n\tvar clearSuccessMessages = function() {\r\n\t\tvar successMessages = document.querySelectorAll( _settings.successMessageSelector );\r\n\r\n\t\t// Remove all success messages if exist\r\n\t\tif ( successMessages.length ) {\r\n\t\t\tsuccessMessages.forEach( function( message ) {\r\n\t\t\t\tmessage.remove();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Handle captured `input` event and route to the appropriate functions.\r\n\t */\r\n\tvar handleInput = function( e ) {\r\n\t\t// PHONE NUMBER FIELD\r\n\t\tif ( e.target.matches( _settings.phoneFieldSelector ) ) {\r\n\t\t\ttriggerCheckoutUpdate();\r\n\t\t\tclearSuccessMessages();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Initialize component and set related handlers.\r\n\t */\r\n\t_publicMethods.init = function( options ) {\r\n\t\tif ( _hasInitialized ) { return; }\r\n\r\n\t\t// Add event listeners\r\n\t\twindow.addEventListener( 'input', handleInput );\r\n\r\n\t\t_hasInitialized = true;\r\n\t};\r\n\r\n\r\n\t\r\n\t//\r\n\t// Public APIs\r\n\t//\r\n\treturn _publicMethods;\r\n\r\n});\r\n"],"names":["root","factory","define","amd","exports","module","CheckoutWAWP","global","this","window","handleInput","e","target","matches","_settings","phoneFieldSelector","$","document","body","trigger","successMessages","querySelectorAll","successMessageSelector","length","forEach","message","remove","jQuery","_hasInitialized","_publicMethods","init","options","addEventListener"],"mappings":"AAIA,CAAA,SAAWA,EAAMC,GACO,YAAlB,OAAOC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,EAAY,CAAC,EACM,UAAnB,OAAOG,QAClBC,OAAOD,QAAUH,EAAY,EAE7BD,EAAKM,aAAcL,EAAY,CAEhC,EAAoB,aAAlB,OAAOM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,GAEjF,aAiDkB,SAAdU,EAAwBC,GAEtBA,EAAEC,OAAOC,QAASC,EAAUC,kBAAmB,IA1BpDC,EAAGC,SAASC,IAAK,EAAEC,QAAS,iBAAkB,GAS1CC,EAAkBH,SAASI,iBAAkBP,EAAUQ,sBAAuB,GAG7DC,SACpBH,EAAgBI,QAAS,SAAUC,GAClCA,EAAQC,OAAO,CAChB,CAAC,CAeH,CArDA,IAAIV,EAAIW,OAGJC,EAAkB,CAAA,EAClBC,EAAiB,GACjBf,EAAY,CACfC,mBAAoB,iBACpBO,uBAAwB,sCACzB,EAkEA,OAdAO,EAAeC,KAAO,SAAUC,GAC1BH,IAGLnB,OAAOuB,iBAAkB,QAAStB,CAAY,EAE9CkB,EAAkB,CAAA,EACnB,EAOOC,CAER,CAAC"}