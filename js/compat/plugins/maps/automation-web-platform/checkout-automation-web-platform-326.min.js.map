{"version":3,"file":"../../automation-web-platform/checkout-automation-web-platform-326.min.js","sources":["automation-web-platform/checkout-automation-web-platform-326.js"],"sourcesContent":["/**\n * Checkout scripts for: Wawp - OTP Verification, Order Notifications, and Country Code Selector for WooCommerce (by Wawp).\n */\n\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.CheckoutWAWP= factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\tvar _hasJQuery = ( $ != null );\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = {};\n\tvar _settings = {\n\t\tphoneFieldSelector: '#billing_phone',\n\t\tsuccessMessageSelector: '.fc-wawp-message.woocommerce-success',\n\t};\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\n\t/**\n\t * Trigger update checkout.\n\t */\n\tvar triggerCheckoutUpdate = function() {\n\t\t// Trigger update checkout\n\t\t$( document.body ).trigger( 'update_checkout' );\n\t}\n\n\n\n\t/**\n\t * Clear success messages from the plugin.\n\t */\n\tvar clearSuccessMessages = function() {\n\t\tvar successMessages = document.querySelectorAll( _settings.successMessageSelector );\n\n\t\t// Remove all success messages if exist\n\t\tif ( successMessages.length ) {\n\t\t\tsuccessMessages.forEach( function( message ) {\n\t\t\t\tmessage.remove();\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Handle captured `input` event and route to the appropriate functions.\n\t */\n\tvar handleInput = function( e ) {\n\t\t// PHONE NUMBER FIELD\n\t\tif ( e.target.matches( _settings.phoneFieldSelector ) ) {\n\t\t\ttriggerCheckoutUpdate();\n\t\t\tclearSuccessMessages();\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Initialize component and set related handlers.\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) { return; }\n\n\t\t// Add event listeners\n\t\twindow.addEventListener( 'input', handleInput );\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\t\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","CheckoutWAWP","global","this","window","handleInput","e","target","matches","_settings","phoneFieldSelector","$","document","body","trigger","successMessages","querySelectorAll","successMessageSelector","length","forEach","message","remove","jQuery","_hasInitialized","_publicMethods","init","options","addEventListener"],"mappings":"CAIA,CAAWA,EAAMC,KACO,YAAlB,OAAOC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,EAAY,CAAC,EACM,UAAnB,OAAOG,QAClBC,OAAOD,QAAUH,EAAY,EAE7BD,EAAKM,aAAcL,EAAY,CAEhC,GAAoB,aAAlB,OAAOM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,GAmD/D,SAAdU,EAAwBC,GAEtBA,EAAEC,OAAOC,QAASC,EAAUC,kBAAmB,IA1BpDC,EAAGC,SAASC,IAAK,EAAEC,QAAS,iBAAkB,GAS1CC,EAAkBH,SAASI,iBAAkBP,EAAUQ,sBAAuB,GAG7DC,SACpBH,EAAgBI,QAAS,SAAUC,GAClCA,EAAQC,OAAO,CAChB,CAAC,CAeH,CArDA,IAAIV,EAAIW,OAGJC,EAAkB,CAAA,EAClBC,EAAiB,GACjBf,EAAY,CACfC,mBAAoB,iBACpBO,uBAAwB,sCACzB,EAkEA,OAdAO,EAAeC,KAAO,SAAUC,GAC1BH,IAGLnB,OAAOuB,iBAAkB,QAAStB,CAAY,EAE9CkB,EAAkB,CAAA,EACnB,EAOOC,CAER,CAAC"}