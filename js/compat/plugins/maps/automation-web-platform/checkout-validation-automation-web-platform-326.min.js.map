{"version":3,"file":"../../automation-web-platform/checkout-validation-automation-web-platform-326.min.js","sources":["automation-web-platform/checkout-validation-automation-web-platform-326.js"],"sourcesContent":["/**\n * Manage checkout front-end validation for: Wawp - OTP Verification, Order Notifications, and Country Code Selector for WooCommerce (by Wawp).\n *\n * DEPENDS ON:\n * - checkout-validation.js // Main checkout validation script from Fluid Checkout\n */\n\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.CheckoutValidationWAWP = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\tvar _hasJQuery = ( $ != null );\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = { };\n\tvar _settings = {\n\t\ttypeFieldSelector: '#billing_phone',\n\t\tverificationStatusFieldSelector: '.validate-wawp',\n\t\tvalidationMessages: {\n\t\t\tphone_number_not_verified: 'Please verify your phone number.',\n\t\t},\n\t};\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\n\t/**\n\t * Check if form row is a CNPJ field.\n\t * @param  {Field}    field            Field for validation.\n\t * @param  {Element}  formRow          Form row element.\n\t * @param  {String}   validationEvent  Event that triggered the validation.\n\t * @return {Boolean}                   Whether the field is a CNPF field.\n\t */\n\tvar isValidateField = function( field, formRow, validationEvent ) {\n\t\t// Bail if not a target contact field\n\t\tif ( ! field.matches( _settings.typeFieldSelector ) ) { return false; }\n\n\t\treturn true;\n\t};\n\n\n\n\t/**\n\t * Validate if the entered phone number has been verified.\n\t * @param  {Field}    field            Field for validation.\n\t * @param  {Element}  formRow          Form row element.\n\t * @param  {String}   validationEvent  Event that triggered the validation.\n\t * @return {Boolean}                   Whether the entered phone number has been verified.\n\t */\n\tvar validateField = function( field, formRow, validationEvent ) {\n\t\t// Get hidden field with verification status\n\t\tvar verificationStatusField = document.querySelector( _settings.verificationStatusFieldSelector );\n\n\t\t// Bail if verification status field value is empty\n\t\tif ( verificationStatusField && '' === verificationStatusField.value ) {\n\t\t\t// Return as invalid\n\t\t\treturn { valid: false, message: _settings.validationMessages.phone_number_not_verified };\n\t\t}\n\n\t\t// Field is valid\n\t\treturn { valid: true };\n\t};\n\n\n\n\t/**\n\t * Register validation types.\n\t */\n\tvar registerValidationTypes = function() {\n\t\tCheckoutValidation.registerValidationType( 'wawp-verification', 'wawp-verification', isValidateField, validateField );\n\t}\n\n\n\n\t/**\n\t * Validate phone number field.\n\t */\n\tvar maybeValidatePhoneField = function() {\n\t\t// Get phone field to re-validate\n\t\tvar field = document.querySelector( _settings.typeFieldSelector );\n\n\t\t// Maybe trigger field valiation\n\t\tif ( window.CheckoutValidation ) {\n\t\t\tCheckoutValidation.validateField( field, 'change' );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Initialize component and set related handlers.\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge settings\n\t\t_settings = FCUtils.extendObject( _settings, options );\n\n\t\t// Register validation types\n\t\tregisterValidationTypes();\n\n\t\t// Add jQuery event listeners\n\t\tif ( _hasJQuery ) {\n\t\t\t$( document ).on( 'updated_checkout', maybeValidatePhoneField );\n\t\t}\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\t\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","CheckoutValidationWAWP","global","this","window","isValidateField","field","formRow","validationEvent","matches","_settings","typeFieldSelector","validateField","verificationStatusField","document","querySelector","verificationStatusFieldSelector","value","valid","message","validationMessages","phone_number_not_verified","maybeValidatePhoneField","CheckoutValidation","$","jQuery","_hasJQuery","_hasInitialized","_publicMethods","init","options","FCUtils","extendObject","registerValidationType","on"],"mappings":"CAOA,CAAWA,EAAMC,KACO,YAAlB,OAAOC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,EAAY,CAAC,EACM,UAAnB,OAAOG,QAClBC,OAAOD,QAAUH,EAAY,EAE7BD,EAAKM,uBAAyBL,EAAY,CAE3C,GAAoB,aAAlB,OAAOM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,GAgC3D,SAAlBU,EAA4BC,EAAOC,EAASC,GAE/C,MAAOF,CAAAA,CAAAA,EAAMG,QAASC,EAAUC,iBAAkB,CAGnD,CAWoB,SAAhBC,EAA0BN,EAAOC,EAASC,GAE7C,IAAIK,EAA0BC,SAASC,cAAeL,EAAUM,+BAAgC,EAGhG,OAAKH,GAA2B,KAAOA,EAAwBI,MAEvD,CAAEC,MAAO,CAAA,EAAOC,QAAST,EAAUU,mBAAmBC,yBAA0B,EAIjF,CAAEH,MAAO,CAAA,CAAK,CACtB,CAgB8B,SAA1BI,IAEH,IAAIhB,EAAQQ,SAASC,cAAeL,EAAUC,iBAAkB,EAG3DP,OAAOmB,oBACXA,mBAAmBX,cAAeN,EAAO,QAAS,CAEpD,CAhFA,IAAIkB,EAAIC,OACJC,EAAoB,MAALF,EAEfG,EAAkB,CAAA,EAClBC,EAAiB,GACjBlB,EAAY,CACfC,kBAAmB,iBACnBK,gCAAiC,iBACjCI,mBAAoB,CACnBC,0BAA2B,kCAC5B,CACD,EAkGA,OAtBAO,EAAeC,KAAO,SAAUC,GAC1BH,IAGLjB,EAAYqB,QAAQC,aAActB,EAAWoB,CAAQ,EA3BrDP,mBAAmBU,uBAAwB,oBAAqB,oBAAqB5B,EAAiBO,CAAc,EAiC/Gc,GACJF,EAAGV,QAAS,EAAEoB,GAAI,mBAAoBZ,CAAwB,EAG/DK,EAAkB,CAAA,EACnB,EAOOC,CAER,CAAC"}