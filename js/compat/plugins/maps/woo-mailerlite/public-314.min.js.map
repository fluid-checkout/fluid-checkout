{"version":3,"file":"../../woo-mailerlite/public-314.min.js","sources":["woo-mailerlite/public-314.js"],"sourcesContent":["jQuery(document).ready(function(a) {\n\tvar _xhr = null;\n\t// CHANGE: Replace field variables with selectors variables\n\tvar _emailFieldSelector = '#billing_email';\n\tvar _firstNameFieldSelector = '#billing_first_name';\n\tvar _lastNameFieldSelector = '#billing_last_name';\n\tvar _signupSelector = '#woo_ml_subscribe';\n \n\tif (jQuery('#woo_ml_preselect_enabled')?.val() == 'yes') {\n\t    // CHANGE: Use selector variable, instead of declaring the selector directly\n\t    jQuery( _signupSelector ).prop('checked', true);\n\t}\n \n\t// CHANGE: Remove event handler declarations as they are replaced with captured events at bottom\n \n\tfunction validateMLSub() {\n\t    // CHANGE: Get fields dinamically\n\t    const email = document.querySelector( _emailFieldSelector );\n \n\t    if(email !== null && email.value.length > 0) {\n\t\t   checkoutMLSub();\n\t    }\n\t}\n \n\tfunction checkoutMLSub() {\n\t    /** set cookie before sending request to server\n\t\t* since multiple checkout update requests can be sent\n\t\t* and server cookies won't get updated, so send the saved\n\t\t* cookie as a request parameter\n\t    **/\n \n\t    if (!getCookie('mailerlite_checkout_token')) {\n\t\t   var now = new Date();\n\t\t   now.setTime(now.getTime() + 48 * 3600 * 1000);\n\t\t   document.cookie = `mailerlite_checkout_token=${(+new Date).toString()}; expires=${now.toUTCString()}; path=/`;\n\t    }\n \n\t    // CHANGE: Use selector variable, instead of declaring the selector directly\n\t    const accept_marketing = document.querySelector( _signupSelector ).checked;\n \n\t    // CHANGE: Get fields dinamically\n\t    const email = document.querySelector( _emailFieldSelector );\n\t    const first_name_field = document.querySelector( _firstNameFieldSelector );\n\t    const last_name_field = document.querySelector( _lastNameFieldSelector );\n \n\t    let first_name = '';\n\t    let last_name = '';\n \n\t    if (first_name_field !== null) {\n\t\t   first_name = first_name_field.value;\n\t    }\n \n\t    if (last_name_field !== null) {\n\t\t   last_name = last_name_field.value;\n\t    }\n \n\t    // CHANGE: Bail if an ajax request is already running\n\t    if ( _xhr !== null ) { return; }\n \n\t    _xhr = jQuery.ajax({\n\t\t   url: woo_ml_public_post.ajax_url,\n\t\t   type: \"post\",\n\t\t   data: {\n\t\t\t  action: \"post_woo_ml_email_cookie\",\n\t\t\t  email: email.value,\n\t\t\t  signup: accept_marketing,\n\t\t\t  language: woo_ml_public_post.language,\n\t\t\t  first_name: first_name,\n\t\t\t  last_name: last_name,\n\t\t\t  cookie_mailerlite_checkout_token:getCookie('mailerlite_checkout_token')\n\t\t   },\n\t\t   // CHANGE: Set the xhr variable to null when the request is complete\n\t\t   complete: function() {\n\t\t\t  _xhr = null;\n\t\t   },\n\t    })\n\t}\n \n\t// CHANGE: Use captured event handlers instead of events attached to specific elements\n\tvar handleBlur = function( e ) {\n\t    // EMAIL, FIRST NAME, LAST NAME\n\t    if ( e.target.matches( _emailFieldSelector ) || e.target.matches( _firstNameFieldSelector ) || e.target.matches( _lastNameFieldSelector ) ) {\n\t\t   validateMLSub();\n\t    }\n\t};\n\tvar handleChange = function( e ) {\n\t    // SIGNUP\n\t    if ( e.target.matches( _signupSelector ) ) {\n\t\t   validateMLSub();\n\t    }\n\t}\n\tdocument.addEventListener( 'blur', handleBlur, true );\n\tdocument.addEventListener( 'change', handleChange, true );\n\t// CHANGE: END - Use captured event handlers instead of events attached to specific elements\n \n });\n \n function getCookie(name) {\n\tconst value = `; ${document.cookie}`;\n\tconst parts = value.split(`; ${name}=`);\n\tif (parts.length === 2) {\n\t    return parts.pop().split(';').shift()\n\t}\n\treturn null;\n }"],"names":["getCookie","name","parts","document","cookie","split","length","pop","shift","jQuery","ready","a","_xhr","_emailFieldSelector","_firstNameFieldSelector","_lastNameFieldSelector","_signupSelector","validateMLSub","email","querySelector","value","checkoutMLSub","now","Date","setTime","getTime","toString","toUTCString","accept_marketing","checked","first_name_field","last_name_field","let","first_name","last_name","ajax","url","woo_ml_public_post","ajax_url","type","data","action","signup","language","cookie_mailerlite_checkout_token","complete","val","prop","addEventListener","e","target","matches"],"mappings":"AAiGC,SAASA,UAAUC,GAEbC,GADQ,KAAKC,SAASC,QACRC,WAAWJ,IAAO,EACtC,OAAqB,IAAjBC,EAAMI,OACCJ,EAAMK,IAAI,EAAEF,MAAM,GAAG,EAAEG,MAAM,EAEjC,IACP,CAxGDC,OAAON,QAAQ,EAAEO,MAAM,SAASC,GAC/B,IAAIC,EAAO,KAEPC,EAAsB,iBACtBC,EAA0B,sBAC1BC,EAAyB,qBACzBC,EAAkB,oBAStB,SAASC,IAEL,IAAMC,EAAQf,SAASgB,cAAeN,CAAoB,EAE1D,GAAa,OAAVK,GAAuC,EAArBA,EAAME,MAAMd,OACjCe,CAWKrB,UAAU,2BAA2B,KACtCsB,EAAM,IAAIC,MACVC,QAAQF,EAAIG,QAAQ,EAAI,MAAgB,EAC5CtB,SAASC,qCAAsC,CAAE,IAAImB,MAAMG,SAAS,cAAcJ,EAAIK,YAAY,aAIlG,IAAMC,EAAmBzB,SAASgB,cAAeH,CAAgB,EAAEa,QAG7DX,EAAQf,SAASgB,cAAeN,CAAoB,EACpDiB,EAAmB3B,SAASgB,cAAeL,CAAwB,EACnEiB,EAAkB5B,SAASgB,cAAeJ,CAAuB,EAEvEiB,IAAIC,EAAa,GACbC,EAAY,GAES,OAArBJ,IACJG,EAAaH,EAAiBV,OAGN,OAApBW,IACJG,EAAYH,EAAgBX,OAId,OAATR,IAELA,EAAOH,OAAO0B,KAAK,CACnBC,IAAKC,mBAAmBC,SACxBC,KAAM,OACNC,KAAM,CACNC,OAAQ,2BACRvB,MAAOA,EAAME,MACbsB,OAAQd,EACRe,SAAUN,mBAAmBM,SAC7BV,WAAYA,EACZC,UAAWA,EACXU,iCAAiC5C,UAAU,2BAA2B,CACtE,EAEA6C,SAAU,WACVjC,EAAO,IACP,CACA,CAAC,EAvDa,CAElB,CAdkD,OAA9CH,OAAO,2BAA2B,GAAGqC,IAAI,GAEzCrC,OAAQO,CAAgB,EAAE+B,KAAK,UAAW,CAAA,CAAI,EAiFlD5C,SAAS6C,iBAAkB,OAZV,SAAUC,IAElBA,EAAEC,OAAOC,QAAStC,CAAoB,GAAKoC,EAAEC,OAAOC,QAASrC,CAAwB,GAAKmC,EAAEC,OAAOC,QAASpC,CAAuB,IACxIE,EAAc,CAElB,EAO+C,CAAA,CAAK,EACpDd,SAAS6C,iBAAkB,SAPR,SAAUC,GAEpBA,EAAEC,OAAOC,QAASnC,CAAgB,GACvCC,EAAc,CAElB,EAEmD,CAAA,CAAK,CAGxD,CAAC"}