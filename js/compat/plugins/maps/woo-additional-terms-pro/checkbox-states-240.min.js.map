{"version":3,"file":"../../woo-additional-terms-pro/checkbox-states-240.min.js","sources":["woo-additional-terms-pro/checkbox-states-240.js"],"sourcesContent":["/**\n * Save additional terms checkboxes states between when updating checkout fragments.\n */\n\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.WooAdditionalTermsCheckboxStatesPRO = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\tvar _hasJQuery = ( $ != null );\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = {};\n\tvar _settings = {\n\t\tadditionalTermsCheckboxSelector: '.woocommerce-terms-and-conditions-wrapper.woo-additional-terms-pro input[type=\"checkbox\"]',\n\t};\n\tvar _checkboxStates = {};\n\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\n\t/**\n\t * Save the additional checkout states to a local variable.\n\t */\n\tvar saveCheckboxesStates = function() {\n\t\t// Clear checkboxes states\n\t\t_checkboxStates = {};\n\n\t\t// Get all additional terms checkboxes\n\t\tvar checkboxes = document.querySelectorAll( _settings.additionalTermsCheckboxSelector );\n\t\t\n\t\t// Iterate and save additional terms checkboxes states\n\t\tfor ( var i = 0; i < checkboxes.length; i++ ) {\n\t\t\tvar checkbox = checkboxes[ i ];\n\t\t\t_checkboxStates[ checkbox.name ] = checkbox.checked;\n\t\t}\n\t}\n\n\t/**\n\t * Restore the additional checkboxes states to a local variable.\n\t */\n\tvar restoreCheckboxesStates = function() {\n\t\t// Get all additional terms checkboxes\n\t\tvar checkboxes = document.querySelectorAll( _settings.additionalTermsCheckboxSelector );\n\t\t\n\t\t// Iterate and restore additional terms checkboxes states\n\t\tfor ( var i = 0; i < checkboxes.length; i++ ) {\n\t\t\tvar checkbox = checkboxes[ i ];\n\t\t\tif ( _checkboxStates[ checkbox.name ] ) {\n\t\t\t\tcheckbox.checked = _checkboxStates[ checkbox.name ];\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Initialize script.\n\t */\n\t_publicMethods.init = function() {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Set jQuery event listeners\n\t\tif ( _hasJQuery ) {\n\t\t\t$( document.body ).on( 'fc_checkout_fragments_replace_before', saveCheckboxesStates );\n\t\t\t$( document.body ).on( 'fc_checkout_fragments_replace_after', restoreCheckboxesStates );\n\t\t}\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","WooAdditionalTermsCheckboxStatesPRO","global","this","window","saveCheckboxesStates","_checkboxStates","checkboxes","document","querySelectorAll","_settings","i","length","checkbox","name","checked","restoreCheckboxesStates","$","jQuery","_hasJQuery","_hasInitialized","_publicMethods","init","body","on"],"mappings":"CAIA,SAAWA,EAAMC,GACO,mBAAXC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,KACmB,iBAAZG,QAClBC,OAAOD,QAAUH,IAEjBD,EAAKM,oCAAsCL,IAN7C,CAQqB,oBAAXM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,gBA0BtD,SAAvBU,IAEHC,EAAkB,GAMlB,IAHA,IAAIC,EAAaC,SAASC,iBAAkBC,GAGlCC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,IAAM,CAC7C,IAAIE,EAAWN,EAAYI,GAC3BL,EAAiBO,EAASC,MAASD,EAASE,SAOhB,SAA1BC,IAKH,IAHA,IAAIT,EAAaC,SAASC,iBAAkBC,GAGlCC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,IAAM,CAC7C,IAAIE,EAAWN,EAAYI,GACtBL,EAAiBO,EAASC,QAC9BD,EAASE,QAAUT,EAAiBO,EAASC,QA/ChD,IAAIG,EAAIC,OACJC,EAAoB,MAALF,EAEfG,GAAkB,EAClBC,EAAiB,GACjBX,EAC8B,4FAE9BJ,EAAkB,GAkEtB,OAjBAe,EAAeC,KAAO,WAChBF,IAGAD,IACJF,EAAGT,SAASe,MAAOC,GAAI,uCAAwCnB,GAC/DY,EAAGT,SAASe,MAAOC,GAAI,sCAAuCR,IAG/DI,GAAkB,IAQZC"}