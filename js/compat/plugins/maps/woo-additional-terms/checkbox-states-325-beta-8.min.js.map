{"version":3,"file":"../../woo-additional-terms/checkbox-states-325-beta-8.min.js","sources":["woo-additional-terms/checkbox-states-325-beta-8.js"],"sourcesContent":["/**\r\n * Save additional terms checkboxes states between when updating checkout fragments.\r\n */\r\n\r\n(function (root, factory) {\r\n\tif ( typeof define === 'function' && define.amd ) {\r\n\t\tdefine([], factory(root));\r\n\t} else if ( typeof exports === 'object' ) {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\troot.WooAdditionalTermsCheckboxStates = factory(root);\r\n\t}\r\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\r\n\r\n\t'use strict';\r\n\r\n\tvar $ = jQuery;\r\n\tvar _hasJQuery = ( $ != null );\r\n\r\n\tvar _hasInitialized = false;\r\n\tvar _publicMethods = {};\r\n\tvar _settings = {\r\n\t\tadditionalTermsCheckboxSelector: '.woocommerce-terms-and-conditions-wrapper.woo-additional-terms input[type=\"checkbox\"]',\r\n\t};\r\n\tvar _checkboxStates = {};\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * METHODS\r\n\t */\r\n\r\n\r\n\r\n\t/**\r\n\t * Save the additional checkout states to a local variable.\r\n\t */\r\n\tvar saveCheckboxesStates = function() {\r\n\t\t// Clear checkboxes states\r\n\t\t_checkboxStates = {};\r\n\r\n\t\t// Get all additional terms checkboxes\r\n\t\tvar checkboxes = document.querySelectorAll( _settings.additionalTermsCheckboxSelector );\r\n\t\t\r\n\t\t// Iterate and save additional terms checkboxes states\r\n\t\tfor ( var i = 0; i < checkboxes.length; i++ ) {\r\n\t\t\tvar checkbox = checkboxes[ i ];\r\n\t\t\t_checkboxStates[ checkbox.name ] = checkbox.checked;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restore the additional checkboxes states to a local variable.\r\n\t */\r\n\tvar restoreCheckboxesStates = function() {\r\n\t\t// Get all additional terms checkboxes\r\n\t\tvar checkboxes = document.querySelectorAll( _settings.additionalTermsCheckboxSelector );\r\n\t\t\r\n\t\t// Iterate and restore additional terms checkboxes states\r\n\t\tfor ( var i = 0; i < checkboxes.length; i++ ) {\r\n\t\t\tvar checkbox = checkboxes[ i ];\r\n\t\t\tif ( _checkboxStates[ checkbox.name ] ) {\r\n\t\t\t\tcheckbox.checked = _checkboxStates[ checkbox.name ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Initialize script.\r\n\t */\r\n\t_publicMethods.init = function() {\r\n\t\tif ( _hasInitialized ) return;\r\n\r\n\t\t// Set jQuery event listeners\r\n\t\tif ( _hasJQuery ) {\r\n\t\t\t$( document.body ).on( 'fc_checkout_fragments_replace_before', saveCheckboxesStates );\r\n\t\t\t$( document.body ).on( 'fc_checkout_fragments_replace_after', restoreCheckboxesStates );\r\n\t\t}\r\n\r\n\t\t_hasInitialized = true;\r\n\t};\r\n\r\n\r\n\r\n\t//\r\n\t// Public APIs\r\n\t//\r\n\treturn _publicMethods;\r\n\r\n});\r\n"],"names":["root","factory","define","amd","exports","module","WooAdditionalTermsCheckboxStates","global","this","window","saveCheckboxesStates","_checkboxStates","checkboxes","document","querySelectorAll","_settings","i","length","checkbox","name","checked","restoreCheckboxesStates","$","jQuery","_hasJQuery","_hasInitialized","_publicMethods","init","body","on"],"mappings":"AAIA,CAAA,SAAWA,EAAMC,GACO,YAAlB,OAAOC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,EAAY,CAAC,EACM,UAAnB,OAAOG,QAClBC,OAAOD,QAAUH,EAAY,EAE7BD,EAAKM,iCAAmCL,EAAY,CAErD,EAAoB,aAAlB,OAAOM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,GAEjF,aAwB2B,SAAvBU,IAEHC,EAAkB,GAMlB,IAHA,IAAIC,EAAaC,SAASC,iBAAkBC,CAA0C,EAG5EC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,CAAC,GAAK,CAC7C,IAAIE,EAAWN,EAAYI,GAC3BL,EAAiBO,EAASC,MAASD,EAASE,OAC7C,CACD,CAK8B,SAA1BC,IAKH,IAHA,IAAIT,EAAaC,SAASC,iBAAkBC,CAA0C,EAG5EC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,CAAC,GAAK,CAC7C,IAAIE,EAAWN,EAAYI,GACtBL,EAAiBO,EAASC,QAC9BD,EAASE,QAAUT,EAAiBO,EAASC,MAE/C,CACD,CAlDA,IAAIG,EAAIC,OACJC,EAAoB,MAALF,EAEfG,EAAkB,CAAA,EAClBC,EAAiB,GACjBX,EAC8B,wFAE9BJ,EAAkB,GAkEtB,OAjBAe,EAAeC,KAAO,WAChBF,IAGAD,IACJF,EAAGT,SAASe,IAAK,EAAEC,GAAI,uCAAwCnB,CAAqB,EACpFY,EAAGT,SAASe,IAAK,EAAEC,GAAI,sCAAuCR,CAAwB,GAGvFI,EAAkB,CAAA,EACnB,EAOOC,CAER,CAAC"}