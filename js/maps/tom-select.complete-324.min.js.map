{"version":3,"file":"../tom-select.complete-324.min.js","sources":["tom-select.complete-324.js"],"sourcesContent":["/**\n* Tom Select v2.3.1\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = void 0;\n\t    this._events = {};\n\t  }\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      const event_array = this._events[event] || [];\n\t      event_array.push(fct);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\t    forEvents(events, event => {\n\t      if (n === 1) {\n\t        delete this._events[event];\n\t        return;\n\t      }\n\t      const event_array = this._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.splice(event_array.indexOf(fct), 1);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      const event_array = self._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.forEach(fct => {\n\t        fct.apply(self, args);\n\t      });\n\t    });\n\t  }\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\t        self.loadPlugin(name);\n\t      }\n\t      return plugins.loaded[name];\n\t    }\n\t  };\n\t}\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {string[]} chars\n\t * @return {string}\n\t */\n\tconst arrayToPattern = chars => {\n\t  chars = chars.filter(Boolean);\n\n\t  if (chars.length < 2) {\n\t    return chars[0] || '';\n\t  }\n\n\t  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n\t};\n\t/**\n\t * @param {string[]} array\n\t * @return {string}\n\t */\n\n\tconst sequencePattern = array => {\n\t  if (!hasDuplicates(array)) {\n\t    return array.join('');\n\t  }\n\n\t  let pattern = '';\n\t  let prev_char_count = 0;\n\n\t  const prev_pattern = () => {\n\t    if (prev_char_count > 1) {\n\t      pattern += '{' + prev_char_count + '}';\n\t    }\n\t  };\n\n\t  array.forEach((char, i) => {\n\t    if (char === array[i - 1]) {\n\t      prev_char_count++;\n\t      return;\n\t    }\n\n\t    prev_pattern();\n\t    pattern += char;\n\t    prev_char_count = 1;\n\t  });\n\t  prev_pattern();\n\t  return pattern;\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {Set<string>} chars\n\t * @return {string}\n\t */\n\n\tconst setToPattern = chars => {\n\t  let array = toArray(chars);\n\t  return arrayToPattern(array);\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n\t * @param {any[]} array\n\t */\n\n\tconst hasDuplicates = array => {\n\t  return new Set(array).size !== array.length;\n\t};\n\t/**\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n\t};\n\t/**\n\t * Return the max length of array values\n\t * @param {string[]} array\n\t *\n\t */\n\n\tconst maxValueLength = array => {\n\t  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n\t};\n\t/**\n\t * @param {string} str\n\t */\n\n\tconst unicodeLength = str => {\n\t  return toArray(str).length;\n\t};\n\t/**\n\t * @param {any} p\n\t * @return {any[]}\n\t */\n\n\tconst toArray = p => Array.from(p);\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t * @param {string} input\n\t * @return {string[][]}\n\t */\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  /** @type {string[][]} */\n\n\t  let result = [];\n\t  const start = input.substring(1);\n\t  const suba = allSubstrings(start);\n\t  suba.forEach(function (subresult) {\n\t    let tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n\t/**\n\t * @typedef {{[key:string]:string}} TUnicodeMap\n\t * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n\t * @typedef {[[number,number]]} TCodePoints\n\t * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n\t * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n\t */\n\t/** @type {TCodePoints} */\n\n\tconst code_points = [[0, 65535]];\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\t/** @type {TUnicodeMap} */\n\n\tlet unicode_map;\n\t/** @type {RegExp} */\n\n\tlet multi_char_reg;\n\tconst max_char_length = 3;\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_convert = {};\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_condensed = {\n\t  '/': '⁄∕',\n\t  '0': '߀',\n\t  \"a\": \"ⱥɐɑ\",\n\t  \"aa\": \"ꜳ\",\n\t  \"ae\": \"æǽǣ\",\n\t  \"ao\": \"ꜵ\",\n\t  \"au\": \"ꜷ\",\n\t  \"av\": \"ꜹꜻ\",\n\t  \"ay\": \"ꜽ\",\n\t  \"b\": \"ƀɓƃ\",\n\t  \"c\": \"ꜿƈȼↄ\",\n\t  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t  \"e\": \"ɛǝᴇɇ\",\n\t  \"f\": \"ꝼƒ\",\n\t  \"g\": \"ǥɠꞡᵹꝿɢ\",\n\t  \"h\": \"ħⱨⱶɥ\",\n\t  \"i\": \"ɨı\",\n\t  \"j\": \"ɉȷ\",\n\t  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t  \"m\": \"ɱɯϻ\",\n\t  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t  \"o\": \"øǿɔɵꝋꝍᴑ\",\n\t  \"oe\": \"œ\",\n\t  \"oi\": \"ƣ\",\n\t  \"oo\": \"ꝏ\",\n\t  \"ou\": \"ȣ\",\n\t  \"p\": \"ƥᵽꝑꝓꝕρ\",\n\t  \"q\": \"ꝗꝙɋ\",\n\t  \"r\": \"ɍɽꝛꞧꞃ\",\n\t  \"s\": \"ßȿꞩꞅʂ\",\n\t  \"t\": \"ŧƭʈⱦꞇ\",\n\t  \"th\": \"þ\",\n\t  \"tz\": \"ꜩ\",\n\t  \"u\": \"ʉ\",\n\t  \"v\": \"ʋꝟʌ\",\n\t  \"vy\": \"ꝡ\",\n\t  \"w\": \"ⱳ\",\n\t  \"y\": \"ƴɏỿ\",\n\t  \"z\": \"ƶȥɀⱬꝣ\",\n\t  \"hv\": \"ƕ\"\n\t};\n\n\tfor (let latin in latin_condensed) {\n\t  let unicode = latin_condensed[latin] || '';\n\n\t  for (let i = 0; i < unicode.length; i++) {\n\t    let char = unicode.substring(i, i + 1);\n\t    latin_convert[char] = latin;\n\t  }\n\t}\n\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n\t/**\n\t * Initialize the unicode_map from the give code point ranges\n\t *\n\t * @param {TCodePoints=} _code_points\n\t */\n\n\tconst initialize = _code_points => {\n\t  if (unicode_map !== undefined) return;\n\t  unicode_map = generateMap(_code_points || code_points);\n\t};\n\t/**\n\t * Helper method for normalize a string\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n\t * @param {string} str\n\t * @param {string} form\n\t */\n\n\tconst normalize = (str, form = 'NFKD') => str.normalize(form);\n\t/**\n\t * Remove accents without reordering string\n\t * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst asciifold = str => {\n\t  return toArray(str).reduce(\n\t  /**\n\t   * @param {string} result\n\t   * @param {string} char\n\t   */\n\t  (result, char) => {\n\t    return result + _asciifold(char);\n\t  }, '');\n\t};\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst _asciifold = str => {\n\t  str = normalize(str).toLowerCase().replace(convert_pat, (\n\t  /** @type {string} */\n\t  char) => {\n\t    return latin_convert[char] || '';\n\t  }); //return str;\n\n\t  return normalize(str, 'NFC');\n\t};\n\t/**\n\t * Generate a list of unicode variants from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @yield {TCodePointObj}\n\t */\n\n\tfunction* generator(code_points) {\n\t  for (const [code_point_min, code_point_max] of code_points) {\n\t    for (let i = code_point_min; i <= code_point_max; i++) {\n\t      let composed = String.fromCharCode(i);\n\t      let folded = asciifold(composed);\n\n\t      if (folded == composed.toLowerCase()) {\n\t        continue;\n\t      } // skip when folded is a string longer than 3 characters long\n\t      // bc the resulting regex patterns will be long\n\t      // eg:\n\t      // folded صلى الله عليه وسلم length 18 code point 65018\n\t      // folded جل جلاله length 8 code point 65019\n\n\n\t      if (folded.length > max_char_length) {\n\t        continue;\n\t      }\n\n\t      if (folded.length == 0) {\n\t        continue;\n\t      }\n\n\t      yield {\n\t        folded: folded,\n\t        composed: composed,\n\t        code_point: i\n\t      };\n\t    }\n\t  }\n\t}\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeSets}\n\t */\n\n\tconst generateSets = code_points => {\n\t  /** @type {{[key:string]:Set<string>}} */\n\t  const unicode_sets = {};\n\t  /**\n\t   * @param {string} folded\n\t   * @param {string} to_add\n\t   */\n\n\t  const addMatching = (folded, to_add) => {\n\t    /** @type {Set<string>} */\n\t    const folded_set = unicode_sets[folded] || new Set();\n\t    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n\t    if (to_add.match(patt)) {\n\t      return;\n\t    }\n\n\t    folded_set.add(escape_regex(to_add));\n\t    unicode_sets[folded] = folded_set;\n\t  };\n\n\t  for (let value of generator(code_points)) {\n\t    addMatching(value.folded, value.folded);\n\t    addMatching(value.folded, value.composed);\n\t  }\n\n\t  return unicode_sets;\n\t};\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\t *\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeMap}\n\t */\n\n\tconst generateMap = code_points => {\n\t  /** @type {TUnicodeSets} */\n\t  const unicode_sets = generateSets(code_points);\n\t  /** @type {TUnicodeMap} */\n\n\t  const unicode_map = {};\n\t  /** @type {string[]} */\n\n\t  let multi_char = [];\n\n\t  for (let folded in unicode_sets) {\n\t    let set = unicode_sets[folded];\n\n\t    if (set) {\n\t      unicode_map[folded] = setToPattern(set);\n\t    }\n\n\t    if (folded.length > 1) {\n\t      multi_char.push(escape_regex(folded));\n\t    }\n\t  }\n\n\t  multi_char.sort((a, b) => b.length - a.length);\n\t  const multi_char_patt = arrayToPattern(multi_char);\n\t  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n\t  return unicode_map;\n\t};\n\t/**\n\t * Map each element of an array from it's folded value to all possible unicode matches\n\t * @param {string[]} strings\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst mapSequence = (strings, min_replacement = 1) => {\n\t  let chars_replaced = 0;\n\t  strings = strings.map(str => {\n\t    if (unicode_map[str]) {\n\t      chars_replaced += str.length;\n\t    }\n\n\t    return unicode_map[str] || str;\n\t  });\n\n\t  if (chars_replaced >= min_replacement) {\n\t    return sequencePattern(strings);\n\t  }\n\n\t  return '';\n\t};\n\t/**\n\t * Convert a short string and split it into all possible patterns\n\t * Keep a pattern only if min_replacement is met\n\t *\n\t * 'abc'\n\t * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n\t *\t\t=> ['abc-pattern','ab-c-pattern'...]\n\t *\n\t *\n\t * @param {string} str\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst substringsToPattern = (str, min_replacement = 1) => {\n\t  min_replacement = Math.max(min_replacement, str.length - 1);\n\t  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n\t    return mapSequence(sub_pat, min_replacement);\n\t  }));\n\t};\n\t/**\n\t * Convert an array of sequences into a pattern\n\t * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n\t *\n\t * @param {Sequence[]} sequences\n\t * @param {boolean} all\n\t */\n\n\tconst sequencesToPattern = (sequences, all = true) => {\n\t  let min_replacement = sequences.length > 1 ? 1 : 0;\n\t  return arrayToPattern(sequences.map(sequence => {\n\t    let seq = [];\n\t    const len = all ? sequence.length() : sequence.length() - 1;\n\n\t    for (let j = 0; j < len; j++) {\n\t      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n\t    }\n\n\t    return sequencePattern(seq);\n\t  }));\n\t};\n\t/**\n\t * Return true if the sequence is already in the sequences\n\t * @param {Sequence} needle_seq\n\t * @param {Sequence[]} sequences\n\t */\n\n\n\tconst inSequences = (needle_seq, sequences) => {\n\t  for (const seq of sequences) {\n\t    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n\t      continue;\n\t    }\n\n\t    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n\t      continue;\n\t    }\n\n\t    let needle_parts = needle_seq.parts;\n\t    /**\n\t     * @param {TSequencePart} part\n\t     */\n\n\t    const filter = part => {\n\t      for (const needle_part of needle_parts) {\n\t        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n\t          return false;\n\t        }\n\n\t        if (part.length == 1 || needle_part.length == 1) {\n\t          continue;\n\t        } // check for overlapping parts\n\t        // a = ['::=','==']\n\t        // b = ['::','===']\n\t        // a = ['r','sm']\n\t        // b = ['rs','m']\n\n\n\t        if (part.start < needle_part.start && part.end > needle_part.start) {\n\t          return true;\n\t        }\n\n\t        if (needle_part.start < part.start && needle_part.end > part.start) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\n\t    let filtered = seq.parts.filter(filter);\n\n\t    if (filtered.length > 0) {\n\t      continue;\n\t    }\n\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\n\tclass Sequence {\n\t  constructor() {\n\t    /** @type {TSequencePart[]} */\n\t    this.parts = [];\n\t    /** @type {string[]} */\n\n\t    this.substrs = [];\n\t    this.start = 0;\n\t    this.end = 0;\n\t  }\n\t  /**\n\t   * @param {TSequencePart|undefined} part\n\t   */\n\n\n\t  add(part) {\n\t    if (part) {\n\t      this.parts.push(part);\n\t      this.substrs.push(part.substr);\n\t      this.start = Math.min(part.start, this.start);\n\t      this.end = Math.max(part.end, this.end);\n\t    }\n\t  }\n\n\t  last() {\n\t    return this.parts[this.parts.length - 1];\n\t  }\n\n\t  length() {\n\t    return this.parts.length;\n\t  }\n\t  /**\n\t   * @param {number} position\n\t   * @param {TSequencePart} last_piece\n\t   */\n\n\n\t  clone(position, last_piece) {\n\t    let clone = new Sequence();\n\t    let parts = JSON.parse(JSON.stringify(this.parts));\n\t    let last_part = parts.pop();\n\n\t    for (const part of parts) {\n\t      clone.add(part);\n\t    }\n\n\t    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n\t    let clone_last_len = last_substr.length;\n\t    clone.add({\n\t      start: last_part.start,\n\t      end: last_part.start + clone_last_len,\n\t      length: clone_last_len,\n\t      substr: last_substr\n\t    });\n\t    return clone;\n\t  }\n\n\t}\n\t/**\n\t * Expand a regular expression pattern to include unicode variants\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t * Issue:\n\t *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n\t *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n\t *\n\t *\tİĲ = IIJ = ⅡJ\n\t *\n\t * \t1/2/4\n\t *\n\t * @param {string} str\n\t * @return {string|undefined}\n\t */\n\n\n\tconst getPattern = str => {\n\t  initialize();\n\t  str = asciifold(str);\n\t  let pattern = '';\n\t  let sequences = [new Sequence()];\n\n\t  for (let i = 0; i < str.length; i++) {\n\t    let substr = str.substring(i);\n\t    let match = substr.match(multi_char_reg);\n\t    const char = str.substring(i, i + 1);\n\t    const match_str = match ? match[0] : null; // loop through sequences\n\t    // add either the char or multi_match\n\n\t    let overlapping = [];\n\t    let added_types = new Set();\n\n\t    for (const sequence of sequences) {\n\t      const last_piece = sequence.last();\n\n\t      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n\t        // if we have a multi match\n\t        if (match_str) {\n\t          const len = match_str.length;\n\t          sequence.add({\n\t            start: i,\n\t            end: i + len,\n\t            length: len,\n\t            substr: match_str\n\t          });\n\t          added_types.add('1');\n\t        } else {\n\t          sequence.add({\n\t            start: i,\n\t            end: i + 1,\n\t            length: 1,\n\t            substr: char\n\t          });\n\t          added_types.add('2');\n\t        }\n\t      } else if (match_str) {\n\t        let clone = sequence.clone(i, last_piece);\n\t        const len = match_str.length;\n\t        clone.add({\n\t          start: i,\n\t          end: i + len,\n\t          length: len,\n\t          substr: match_str\n\t        });\n\t        overlapping.push(clone);\n\t      } else {\n\t        // don't add char\n\t        // adding would create invalid patterns: 234 => [2,34,4]\n\t        added_types.add('3');\n\t      }\n\t    } // if we have overlapping\n\n\n\t    if (overlapping.length > 0) {\n\t      // ['ii','iii'] before ['i','i','iii']\n\t      overlapping = overlapping.sort((a, b) => {\n\t        return a.length() - b.length();\n\t      });\n\n\t      for (let clone of overlapping) {\n\t        // don't add if we already have an equivalent sequence\n\t        if (inSequences(clone, sequences)) {\n\t          continue;\n\t        }\n\n\t        sequences.push(clone);\n\t      }\n\n\t      continue;\n\t    } // if we haven't done anything unique\n\t    // clean up the patterns\n\t    // helps keep patterns smaller\n\t    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n\t    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n\t      pattern += sequencesToPattern(sequences, false);\n\t      let new_seq = new Sequence();\n\t      const old_seq = sequences[0];\n\n\t      if (old_seq) {\n\t        new_seq.add(old_seq.last());\n\t      }\n\n\t      sequences = [new_seq];\n\t    }\n\t  }\n\n\t  pattern += sequencesToPattern(sequences, true);\n\t  return pattern;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  if (token.regex == null) return 0;\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate$1 = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        if (this.settings.diacritics) {\n\t          regex = getPattern(word) || null;\n\t        } else {\n\t          regex = escape_regex(word);\n\t        }\n\n\t        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {T.ScoreFn}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\t  /**\n\t   * @returns {T.ScoreFn}\n\t   *\n\t   */\n\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate$1(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var score,\n\t            sum = 0;\n\n\t        for (let token of tokens) {\n\t          score = scoreObject(token, data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate$1(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var implicit_score,\n\t        sort_flds = [];\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (let s of sort) {\n\t        if (search.query || s.field !== '$score') {\n\t          sort_flds.push(s);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (let fld of sort_flds) {\n\t        if (fld.field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      } // without a search.query, all items will have the same score\n\n\t    } else {\n\t      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    }\n\n\t    return function (a, b) {\n\t      var result, field;\n\n\t      for (let sort_fld of sort_flds) {\n\t        field = sort_fld.field;\n\t        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\t        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n\t        if (result) return result;\n\t      }\n\n\t      return 0;\n\t    };\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate$1(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate$1(self.items, (_, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\t  if (isHtmlString(query)) {\n\t    var tpl = document.createElement('template');\n\t    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t    return tpl.content.firstChild;\n\t  }\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\n\t/**\n\t * Add css classes\n\t *\n\t */\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\n\t/**\n\t * Return arguments\n\t *\n\t */\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\t  return arg;\n\t};\n\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\t    target = target.parentNode;\n\t  }\n\t};\n\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\t  return list[0];\n\t};\n\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\t  return i;\n\t};\n\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\n\t/**\n\t * Replace a node\n\t */\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return;\n\n\t  // convet string to regex\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  }\n\n\t  // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\t    return 0;\n\t  };\n\n\t  // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      Array.from(node.childNodes).forEach(element => {\n\t        highlightRecursive(element);\n\t      });\n\t    }\n\t  };\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\t  highlightRecursive(element);\n\t};\n\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  refreshThrottle: 300,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\n\t/**\n\t * use setTimeout if timeout > 0 \n\t */\n\tconst timeout = (fn, timeout) => {\n\t  if (timeout > 0) {\n\t    return setTimeout(fn, timeout);\n\t  }\n\t  fn.call(null);\n\t  return null;\n\t};\n\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {};\n\n\t  // override trigger method\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  };\n\n\t  // invoke provided function\n\t  fn.apply(self, []);\n\t  self.trigger = trigger;\n\n\t  // trigger queued events\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n\t * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n\t */\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\n\t/**\n\t * Prevent default\n\t *\n\t */\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Add event helper\n\t *\n\t */\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\n\t/**\n\t *\n\t */\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\t    let $order = 0;\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\t      var json = attr_data && data[attr_data];\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\t      return data;\n\t    };\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return;\n\n\t      // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        option_data.$order = option_data.$order || ++$order;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      optgroup_data.$order = optgroup_data.$order || ++$order;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.focus_node = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isReadOnly = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    // @deprecated 1.8\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.ignoreHover = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = void 0;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    this.refreshTimeout = null;\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\t    input.tomselect = this;\n\n\t    // detect rtl environment\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction');\n\n\t    // setup default state\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required;\n\n\t    // search system\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    });\n\n\t    // option-dependent defaults\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    }\n\n\t    // set up createFilter callback\n\t    var filter = settings.createFilter;\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = value => {\n\t          return this.settings.duplicates || !this.options[value];\n\t        };\n\t      }\n\t    }\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates();\n\n\t    // Create all elements\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\t    const dropdown = this._render('dropdown');\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n\t    // default controlInput\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput);\n\n\t      // set attributes\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n\t      iterate$1(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input;\n\n\t      // dom element\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\t    wrapper.style.width = input.style.width;\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\t    if (settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    }\n\n\t    // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t    if (!settings.splitOn && settings.delimiter) {\n\t      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t    }\n\n\t    // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\t    addEvent(dropdown, 'mousemove', () => {\n\t      self.ignoreHover = false;\n\t    });\n\t    addEvent(dropdown, 'mouseenter', e => {\n\t      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n\t      if (target_match) self.onOptionHover(e, target_match);\n\t    }, {\n\t      capture: true\n\t    });\n\n\t    // clicking on an option should select it\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      }\n\n\t      // retain focus (see control_input mousedown)\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    });\n\n\t    // keydown on focus_node for arrow_down/arrow_up\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e));\n\n\t    // keypress and input/keyup\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\t        self.inputState();\n\t        return;\n\t      }\n\n\t      // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation();\n\n\t        // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\t    const win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('scroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    };\n\n\t    // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', () => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else if (input.readOnly) {\n\t      self.setReadOnly(true);\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize');\n\n\t    // preload options\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options);\n\n\t    // build optgroup table\n\t    iterate$1(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items || [], true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\t  onClick() {\n\t    var self = this;\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\t  onMouseDown() {}\n\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\t  onPaste(e) {\n\t    var self = this;\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\t    if (!self.settings.splitOn) {\n\t      return;\n\t    }\n\n\t    // Wait for pasted text to be recognized in value\n\t    setTimeout(() => {\n\t      var pastedText = self.inputValue();\n\t      if (!pastedText.match(self.settings.splitOn)) {\n\t        return;\n\t      }\n\t      var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t      iterate$1(splitInput, piece => {\n\t        const hash = hash_key(piece);\n\t        if (hash) {\n\t          if (this.options[piece]) {\n\t            self.addItem(piece);\n\t          } else {\n\t            self.createItem(piece);\n\t          }\n\t        }\n\t      });\n\t    }, 0);\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\t  onKeyPress(e) {\n\t    var self = this;\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\t  onKeyDown(e) {\n\t    var self = this;\n\t    self.ignoreHover = true;\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\t      return;\n\t    }\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\t        break;\n\n\t      // esc: close dropdown\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\t        self.clearActiveItems();\n\t        return;\n\n\t      // down: open dropdown or move selection down\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\t        preventDefault(e);\n\t        return;\n\n\t      // up: move selection up\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\t        preventDefault(e);\n\t        return;\n\n\t      // return: select active option\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e);\n\n\t          // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e);\n\n\t          // don't submit form when searching for a value\n\t        } else if (document.activeElement == self.control_input && self.isOpen) {\n\t          preventDefault(e);\n\t        }\n\t        return;\n\n\t      // left: modifiy item selection to the left\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\n\t      // right: modifiy item selection to the right\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\n\t      // tab: select active option and/or create item\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption);\n\n\t            // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\t            preventDefault(e);\n\t          }\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\t        return;\n\n\t      // delete|backspace: delete items\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    }\n\n\t    // don't enter text in the control_input when active items are selected\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\t  onInput(e) {\n\t    if (this.isLocked) {\n\t      return;\n\t    }\n\t    const value = this.inputValue();\n\t    if (this.lastValue === value) return;\n\t    this.lastValue = value;\n\t    if (value == '') {\n\t      this._onInput();\n\t      return;\n\t    }\n\t    if (this.refreshTimeout) {\n\t      clearTimeout(this.refreshTimeout);\n\t    }\n\t    this.refreshTimeout = timeout(() => {\n\t      this.refreshTimeout = null;\n\t      this._onInput();\n\t    }, this.settings.refreshThrottle);\n\t  }\n\t  _onInput() {\n\t    const value = this.lastValue;\n\t    if (this.settings.shouldLoad.call(this, value)) {\n\t      this.load(value);\n\t    }\n\t    this.refreshOptions();\n\t    this.trigger('type', value);\n\t  }\n\n\t  /**\n\t   * Triggered when the user rolls over\n\t   * an option in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  onOptionHover(evt, option) {\n\t    if (this.ignoreHover) return;\n\t    this.setActiveOption(option, false);\n\t  }\n\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\t    if (self.isDisabled || self.isReadOnly) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\t    if (!self.activeItems.length) {\n\t      self.inputState();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\t    self.refreshState();\n\t  }\n\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t      self = this;\n\n\t    // should not be possible to trigger a option under a disabled optgroup\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\t    self.trigger('load', options, optgroups);\n\t  }\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return;\n\n\t    // clear the active selection\n\t    if (!item) {\n\t      self.clearActiveItems();\n\t      if (self.isFocused) {\n\t        self.inputState();\n\t      }\n\t      return;\n\t    }\n\n\t    // modify selection\n\t    eventName = e && e.type.toLowerCase();\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    }\n\n\t    // ensure control has focus\n\t    self.inputState();\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\t  setActiveOption(option, scroll = true) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    if (scroll) this.scrollToOption(option);\n\t  }\n\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\t  selectAll() {\n\t    const self = this;\n\t    if (self.settings.mode === 'single') return;\n\t    const activeItems = self.controlChildren();\n\t    if (!activeItems.length) return;\n\t    self.inputState();\n\t    self.close();\n\t    self.activeItems = activeItems;\n\t    iterate$1(activeItems, item => {\n\t      self.setActiveItemClass(item);\n\t    });\n\t  }\n\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\t      self.isInputHidden = false;\n\t    }\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\n\t  /**\n\t   * Get the input value\n\t   */\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled || self.isReadOnly) return;\n\t    self.ignoreFocus = true;\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\t  search(query) {\n\t    var result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions();\n\n\t    // validate user-provided result scoring function\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    }\n\n\t    // perform search\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    }\n\n\t    // filter out selected items\n\t    if (self.settings.hideSelected) {\n\t      result.items = result.items.filter(item => {\n\t        let hashed = hash_key(item.id);\n\t        return !(hashed && self.items.indexOf(hashed) !== -1);\n\t      });\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n\t    var results = self.search(query);\n\t    var active_option = null;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\t    if (same_query) {\n\t      active_option = self.activeOption;\n\t      if (active_option) {\n\t        active_group = active_option.closest('[data-group]');\n\t      }\n\t    }\n\n\t    // build markup\n\t    n = results.items.length;\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    }\n\n\t    // get fragment for group and the position of the group in group_order\n\t    const getGroupFragment = (optgroup, order) => {\n\t      let group_order_i = groups[optgroup];\n\t      if (group_order_i !== undefined) {\n\t        let order_group = groups_order[group_order_i];\n\t        if (order_group !== undefined) {\n\t          return [group_order_i, order_group.fragment];\n\t        }\n\t      }\n\t      let group_fragment = document.createDocumentFragment();\n\t      group_order_i = groups_order.length;\n\t      groups_order.push({\n\t        fragment: group_fragment,\n\t        order,\n\t        optgroup\n\t      });\n\t      return [group_order_i, group_fragment];\n\t    };\n\n\t    // render and group available options individually\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let item = results.items[i];\n\t      if (!item) continue;\n\t      let opt_value = item.id;\n\t      let option = self.options[opt_value];\n\t      if (option === undefined) continue;\n\t      let opt_hash = get_hash(opt_value);\n\t      let option_el = self.getOption(opt_hash, true);\n\n\t      // toggle 'selected' class\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n\t      }\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\t        let order = option.$order;\n\t        let self_optgroup = self.optgroups[optgroup];\n\t        if (self_optgroup === undefined) {\n\t          optgroup = '';\n\t        } else {\n\t          order = self_optgroup.$order;\n\t        }\n\t        const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);\n\n\t        // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active');\n\n\t          // make sure we keep the activeOption in the same group\n\t          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n\t            if (active_group && active_group.dataset.group === optgroup.toString()) {\n\t              active_option = option_el;\n\t            }\n\t          }\n\t        }\n\t        group_fragment.appendChild(option_el);\n\t        if (optgroup != '') {\n\t          groups[optgroup] = group_order_i;\n\t        }\n\t      }\n\t    }\n\n\t    // sort optgroups\n\t    if (self.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        return a.order - b.order;\n\t      });\n\t    }\n\n\t    // render optgroup headers & join groups\n\t    html = document.createDocumentFragment();\n\t    iterate$1(groups_order, group_order => {\n\t      let group_fragment = group_order.fragment;\n\t      let optgroup = group_order.optgroup;\n\t      if (!group_fragment || !group_fragment.children.length) return;\n\t      let group_heading = self.optgroups[optgroup];\n\t      if (group_heading !== undefined) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', group_heading);\n\t        append(group_options, header);\n\t        append(group_options, group_fragment);\n\t        let group_html = self.render('optgroup', {\n\t          group: group_heading,\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, group_fragment);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html);\n\n\t    // highlight matching terms inline\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate$1(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    }\n\n\t    // helper method for adding templates to dropdown\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\t      return content;\n\t    };\n\n\t    // add loading message\n\t    if (self.loading) {\n\t      add_template('loading');\n\n\t      // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading');\n\n\t      // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    }\n\n\t    // add create option\n\t    has_create_option = self.canCreate(query);\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    }\n\n\t    // activate\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\t  addOption(data, user_created = false) {\n\t    const self = this;\n\n\t    // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\t    const key = hash_key(data[self.settings.valueField]);\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\t    return key;\n\t  }\n\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\t  addOptions(data, user_created = false) {\n\t    iterate$1(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]);\n\n\t    // sanity checks\n\t    if (value_old === null) return;\n\t    const data_old = self.options[value_old];\n\t    if (data_old == undefined) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || data_old.$order;\n\t    delete self.options[value_old];\n\n\t    // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data;\n\n\t    // update the option if it's in the dropdown\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\t        replaceNode(option, option_new);\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\t      option.remove();\n\t    }\n\n\t    // update the item if we have one\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    }\n\n\t    // invalidate last query because we might have updated the sortField\n\t    self.lastQuery = null;\n\t  }\n\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\n\t  /**\n\t   * Clears all options.\n\t   */\n\t  clearOptions(filter) {\n\t    const boundFilter = (filter || this.clearFilter).bind(this);\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    const selected = {};\n\t    iterate$1(this.options, (option, key) => {\n\t      if (boundFilter(option, key)) {\n\t        selected[key] = option;\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\n\t  /**\n\t   * Used by clearOptions() to decide whether or not an option should be removed\n\t   * Return true to keep an option, false to remove\n\t   *\n\t   */\n\t  clearFilter(option, value) {\n\t    if (this.items.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\t    if (hashed === null) return null;\n\t    const option = this.options[hashed];\n\t    if (option != undefined) {\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\t    return null;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t      all;\n\t    if (!option) {\n\t      return null;\n\t    }\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\t      return all[i - 1];\n\t    }\n\t    return null;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\t    const last_item = items[items.length - 1];\n\t    items.forEach(item => {\n\t      self.isPending = item !== last_item;\n\t      self.addItem(item, silent);\n\t    });\n\t  }\n\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        }\n\n\t        // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        }\n\n\t        // hide the menu if the maximum number of items have been selected or no options are left\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\t        self.trigger('item_add', hashed, item);\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\t  createItem(input = null, callback = () => {}) {\n\t    // triggerDropdown parameter @deprecated 2.1.1\n\t    if (arguments.length === 3) {\n\t      callback = arguments[2];\n\t    }\n\t    if (typeof callback != 'function') {\n\t      callback = () => {};\n\t    }\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\t    self.lock();\n\t    var created = false;\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\t    if (!created) {\n\t      create(output);\n\t    }\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('readonly', self.isReadOnly);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\t  refreshValidityState() {\n\t    var self = this;\n\t    if (!self.input.validity) {\n\t      return;\n\t    }\n\t    self.isValid = self.input.validity.valid;\n\t    self.isInvalid = !self.isValid;\n\t  }\n\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\t      const has_selected = self.input.querySelectorAll('option:checked').length;\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        }\n\n\t        // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\t        selected.push(option_el);\n\n\t        // marking empty option as selected can break validation\n\t        // fixes https://github.com/orchidjs/tom-select/issues/303\n\t        if (option_el != empty_option || has_selected > 0) {\n\t          option_el.selected = true;\n\t        }\n\t        return option_el;\n\t      }\n\n\t      // unselect all selected options\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      });\n\n\t      // nothing selected?\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\");\n\n\t        // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.inputState();\n\t      }\n\t    }\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate$1(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.inputState();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret] || null);\n\t    self.setCaret(caret + 1);\n\t  }\n\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input);\n\n\t    // determine items that will be removed\n\t    const rm_items = [];\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\t      iterate$1(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\t      let rm_item;\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_item = items[self.caretPos - 1];\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_item = items[self.caretPos];\n\t      }\n\t      if (rm_item !== undefined) {\n\t        rm_items.push(rm_item);\n\t      }\n\t    }\n\t    if (!self.shouldDelete(rm_items, e)) {\n\t      return false;\n\t    }\n\t    preventDefault(e, true);\n\n\t    // perform removal\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\t    self.inputState();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Return true if the items should be deleted\n\t   */\n\t  shouldDelete(items, evt) {\n\t    const values = items.map(item => item.dataset.value);\n\n\t    // allow the callback to abort\n\t    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t      adjacent,\n\t      self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return;\n\n\t    // add or remove to active items\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        }\n\n\t        // if no active item, get items adjacent to the control input\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      }\n\n\t      // move caret to the left or right\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\t  moveCaret(direction) {}\n\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\t    var result = this.control.querySelectorAll('.active');\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\t  lock() {\n\t    this.setLocked(true);\n\t  }\n\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\t  unlock() {\n\t    this.setLocked(false);\n\t  }\n\n\t  /**\n\t   * Disable or enable user input on the control\n\t   */\n\t  setLocked(lock = this.isReadOnly || this.isDisabled) {\n\t    this.isLocked = lock;\n\t    this.refreshState();\n\t  }\n\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\t  disable() {\n\t    this.setDisabled(true);\n\t    this.close();\n\t  }\n\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\t  enable() {\n\t    this.setDisabled(false);\n\t  }\n\t  setDisabled(disabled) {\n\t    this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n\t    this.isDisabled = disabled;\n\t    this.input.disabled = disabled;\n\t    this.control_input.disabled = disabled;\n\t    this.setLocked();\n\t  }\n\t  setReadOnly(isReadOnly) {\n\t    this.isReadOnly = isReadOnly;\n\t    this.input.readOnly = isReadOnly;\n\t    this.control_input.readOnly = isReadOnly;\n\t    this.setLocked();\n\t  }\n\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\t    self._destroy();\n\t    delete self.input.tomselect;\n\t  }\n\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\t  render(templateName, data) {\n\t    var id, html;\n\t    const self = this;\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    }\n\n\t    // render markup\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\t    if (!html) {\n\t      return null;\n\t    }\n\t    html = getDom(html);\n\n\t    // add mandatory attributes\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      const value = get_hash(data[self.settings.valueField]);\n\t      setAttr(html, {\n\t        'data-value': value\n\t      });\n\n\t      // make sure we have some classes if a template is overwritten\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        });\n\n\t        // update cache\n\t        data.$div = html;\n\t        self.options[value] = data;\n\t      }\n\t    }\n\t    return html;\n\t  }\n\n\t  /**\n\t   * Type guarded rendering\n\t   *\n\t   */\n\t  _render(templateName, data) {\n\t    const html = this.render(templateName, data);\n\t    if (html == null) {\n\t      throw 'HTMLElement expected';\n\t    }\n\t    return html;\n\t  }\n\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\t  clearCache() {\n\t    iterate$1(this.options, option => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\t    self[method] = function () {\n\t      var result, result_new;\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\t      result_new = new_fn.apply(self, arguments);\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"checkbox_options\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction checkbox_options (userOptions) {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false;\n\t  const cbOptions = Object.assign({\n\t    // so that the user may add different ones as well\n\t    className: \"tomselect-checkbox\",\n\t    // the following default to the historic plugin's values\n\t    checkedClassNames: undefined,\n\t    uncheckedClassNames: undefined\n\t  }, userOptions);\n\t  var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n\t    if (toCheck) {\n\t      checkbox.checked = true;\n\t      if (cbOptions.uncheckedClassNames) {\n\t        checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t      }\n\t      if (cbOptions.checkedClassNames) {\n\t        checkbox.classList.add(...cbOptions.checkedClassNames);\n\t      }\n\t    } else {\n\t      checkbox.checked = false;\n\t      if (cbOptions.checkedClassNames) {\n\t        checkbox.classList.remove(...cbOptions.checkedClassNames);\n\t      }\n\t      if (cbOptions.uncheckedClassNames) {\n\t        checkbox.classList.add(...cbOptions.uncheckedClassNames);\n\t      }\n\t    }\n\t  };\n\n\t  // update the checkbox for an option\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input.' + cbOptions.className);\n\t      if (checkbox instanceof HTMLInputElement) {\n\t        UpdateChecked(checkbox, option.classList.contains('selected'));\n\t      }\n\t    }, 1);\n\t  };\n\n\t  // add checkbox to option template\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      if (cbOptions.className) {\n\t        checkbox.classList.add(cbOptions.className);\n\t      }\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\t      UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  });\n\n\t  // uncheck when item removed\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\t      UpdateCheckbox(option);\n\t    }\n\t  });\n\n\t  // check when item added\n\t  self.on('item_add', value => {\n\t    var option = self.getOption(value);\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      UpdateCheckbox(option);\n\t    }\n\t  });\n\n\t  // remove items when selected option is clicked\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      if (self.isLocked) return;\n\t      self.clear();\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tconst insertAfter = (referenceNode, newNode) => {\n\t  var _referenceNode$parent;\n\t  (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n\t};\n\tconst insertBefore = (referenceNode, newNode) => {\n\t  var _referenceNode$parent2;\n\t  (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n\t};\n\tconst isBefore = (referenceNode, newNode) => {\n\t  do {\n\t    var _newNode;\n\t    newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n\t    if (referenceNode == newNode) {\n\t      return true;\n\t    }\n\t  } while (newNode && newNode.previousElementSibling);\n\t  return false;\n\t};\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  let sortable = true;\n\t  let drag_item;\n\n\t  /**\n\t   * Add draggable attribute to item\n\t   */\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\t    self.settings.render.item = (data, escape) => {\n\t      const item = getDom(orig_render_item.call(self, data, escape));\n\t      setAttr(item, {\n\t        'draggable': 'true'\n\t      });\n\n\t      // prevent doc_mousedown (see tom-select.ts)\n\t      const mousedown = evt => {\n\t        if (!sortable) preventDefault(evt);\n\t        evt.stopPropagation();\n\t      };\n\t      const dragStart = evt => {\n\t        drag_item = item;\n\t        setTimeout(() => {\n\t          item.classList.add('ts-dragging');\n\t        }, 0);\n\t      };\n\t      const dragOver = evt => {\n\t        evt.preventDefault();\n\t        item.classList.add('ts-drag-over');\n\t        moveitem(item, drag_item);\n\t      };\n\t      const dragLeave = () => {\n\t        item.classList.remove('ts-drag-over');\n\t      };\n\t      const moveitem = (targetitem, dragitem) => {\n\t        if (dragitem === undefined) return;\n\t        if (isBefore(dragitem, item)) {\n\t          insertAfter(targetitem, dragitem);\n\t        } else {\n\t          insertBefore(targetitem, dragitem);\n\t        }\n\t      };\n\t      const dragend = () => {\n\t        var _drag_item;\n\t        document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n\t        (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n\t        drag_item = undefined;\n\t        var values = [];\n\t        self.control.querySelectorAll(`[data-value]`).forEach(el => {\n\t          if (el.dataset.value) {\n\t            let value = el.dataset.value;\n\t            if (value) {\n\t              values.push(value);\n\t            }\n\t          }\n\t        });\n\t        self.setValue(values);\n\t      };\n\t      addEvent(item, 'mousedown', mousedown);\n\t      addEvent(item, 'dragstart', dragStart);\n\t      addEvent(item, 'dragenter', dragOver);\n\t      addEvent(item, 'dragover', dragOver);\n\t      addEvent(item, 'dragleave', dragLeave);\n\t      addEvent(item, 'dragend', dragend);\n\t      return item;\n\t    };\n\t  });\n\t  self.hook('instead', 'lock', () => {\n\t    sortable = false;\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    sortable = true;\n\t    return orig_unlock.call(self);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction caret_position () {\n\t  var self = this;\n\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return;\n\n\t    // move caret before or after selected items\n\t    const last_active = self.getLastActive(direction);\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active');\n\n\t      // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction dropdown_input () {\n\t  const self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t    // set a placeholder in the select control\n\t    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n\t    placeholder.placeholder = self.settings.placeholder || '';\n\t    self.control.append(placeholder);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\t          self.clearActiveItems();\n\t          return;\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    });\n\n\t    // give the control_input focus when the dropdown is open\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    });\n\n\t    // prevent onBlur from closing when focus is on the control_input\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur());\n\n\t    // return focus to control to allow further keyboard input\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus({\n\t        preventScroll: true\n\t      });\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"no_active_items\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\t    self.ignoreHover = true;\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions);\n\n\t  //options.className = 'remove-single';\n\t  var self = this;\n\n\t  // override the render method to add remove button to each item\n\t  if (!options.append) {\n\t    return;\n\t  }\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\t    self.settings.render.item = (data, escape) => {\n\t      var item = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      item.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        if (self.isLocked) return;\n\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        if (!self.shouldDelete([item], evt)) return;\n\t        self.removeItem(item);\n\t        self.refreshOptions(false);\n\t        self.inputState();\n\t      });\n\t      return item;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (!self.isFocused) {\n\t      return;\n\t    }\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\t  var load_more_opt;\n\t  var default_values = [];\n\t  if (!self.settings.shouldLoadMore) {\n\t    // return true if additional results should be loaded\n\t    self.settings.shouldLoadMore = () => {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t      if (scroll_percent > 0.9) {\n\t        return true;\n\t      }\n\t      if (self.activeOption) {\n\t        var selectable = self.selectable();\n\t        var index = Array.from(selectable).indexOf(self.activeOption);\n\t        if (index >= selectable.length - 2) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  }\n\n\t  // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }];\n\n\t  // can we load more results for given query?\n\t  const canLoadMore = query => {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\t  const clearFilter = (option, value) => {\n\t    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\n\t  // set the next url that will be\n\t  self.setNextUrl = (value, next_url) => {\n\t    pagination[value] = next_url;\n\t  };\n\n\t  // getUrl() to be used in settings.load()\n\t  self.getUrl = query => {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    }\n\n\t    // if the user goes back to a previous query\n\t    // we need to load the first page again\n\t    self.clearPagination();\n\t    return self.settings.firstUrl.call(self, query);\n\t  };\n\n\t  // clear pagination\n\t  self.clearPagination = () => {\n\t    pagination = {};\n\t  };\n\n\t  // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\t    return orig_clearActiveOption.call(self);\n\t  });\n\n\t  // override the canLoad method\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\t    return canLoadMore(query);\n\t  });\n\n\t  // wrap the load\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions(clearFilter);\n\t    } else if (load_more_opt) {\n\t      const first_option = options[0];\n\t      if (first_option !== undefined) {\n\t        load_more_opt.dataset.value = first_option[self.settings.valueField];\n\t      }\n\t    }\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  });\n\n\t  // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\t      if (option) {\n\t        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t        load_more_opt = option;\n\t      }\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  });\n\n\t  // add scroll listener and default templates\n\t  self.on('initialize', () => {\n\t    default_values = Object.keys(self.options);\n\t    dropdown_content = self.dropdown_content;\n\n\t    // default templates\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: () => {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: () => {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render);\n\n\t    // watch dropdown content scroll position\n\t    dropdown_content.addEventListener('scroll', () => {\n\t      if (!self.settings.shouldLoadMore.call(self)) {\n\t        return;\n\t      }\n\n\t      // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      }\n\n\t      // don't call load() too much\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n}));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map"],"names":["global","factory","exports","module","define","amd","globalThis","self","TomSelect","this","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","let","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","Array","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","max_char_length","latin_convert","latin","latin_condensed","/","0","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","_asciifold","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","match","add","code_point_min","code_point_max","composed","String","fromCharCode","yield","code_point","generateMap","multi_char","set","sort","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","map","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","end","needle_parts","parts","filtered","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","old_seq","added_types","has","new_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","pos","regex","search","score","string","propToArray","key","isArray","iterate$1","object","hasOwnProperty","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","field_regex","words","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","fld","direction","sort_fld","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","iterate","getDom","tpl","jquery","HTMLElement","isHtmlString","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","KEY_SHORTCUT","navigator","test","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","highlight","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","node","getSettings","settings_user","data_raw","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","tagName","settings_element","option","textContent","init_select","optionsMap","group_count","$order","readData","dataset","json","addOption","group","option_data","arr","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","opt","values","Interface","instance_i","super","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","input_arg","user_settings","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isReadOnly","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","refreshTimeout","tomselect","dir","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","appendChild","setup","delay","timeout","passive_event","passive","listboxId","control_id","role","aria-haspopup","aria-expanded","aria-controls","label","label_click","focus","doc_mousedown","for","label_id","aria-labelledby","width","classes_plugins","multiple","load","clearTimeout","setTimeout","call","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","className","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","prev","selectAll","open","next","getAdjacent","setActiveOption","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","deactivate","hasFocus","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","swap","getLastActive","begin","prototype","setActiveItemClass","removeActiveItem","last_active","idx","scroll","aria-activedescendant","aria-selected","scrollToOption","behavior","height_menu","scrollTop","height_item","clientHeight","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","group_order_i","group_fragment","order_group","fragment","createDocumentFragment","cloneNode","$id","toString","group_order","group_options","group_html","group_heading","header","elements","querySelectorAll","tok","element","highlightText","spannode","middlebit","splitText","index","middleclone","highlightChildren","nodeType","childNodes","highlightRecursive","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","value_old","value_new","data_old","getItem","uncacheValue","option_new","index_item","item_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","caret","lock","created","unlock","output","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","rect","left","context","scrollY","scrollX","tail","selection","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","aria-disabled","data-selectable","data-group","data-disabled","data-value","data-ts-item","hook","when","method","new_fn","orig_method","result_new","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateCheckbox","checkbox","HTMLInputElement","UpdateChecked","toCheck","checked","orig_render_option","rendered","prepend","title","button","orig_lock","orig_unlock","sortable","drag_item","orig_render_item","draggable","dragOver","moveitem","targetitem","dragitem","referenceNode","newNode","_referenceNode$parent","nextSibling","_referenceNode$parent2","_drag_item","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","style_name","test_input","cssText","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results","tomSelect"],"mappings":"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"}