{"version":3,"file":"../checkout-validation-230-beta-5.min.js","sources":["checkout-validation-230-beta-5.js"],"sourcesContent":["/**\r\n * Manage checkout front-end validation.\r\n *\r\n * DEPENDS ON:\r\n * - jQuery // Interact with WooCommerce events\r\n */\r\n\r\n(function (root, factory) {\r\n\tif ( typeof define === 'function' && define.amd ) {\r\n\t\tdefine([], factory(root));\r\n\t} else if ( typeof exports === 'object' ) {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\troot.CheckoutValidation = factory(root);\r\n\t}\r\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\r\n\r\n\t'use strict';\r\n\r\n\tvar $ = jQuery;\r\n\tvar _hasJQuery = ( $ != null );\r\n\r\n\tvar _hasInitialized = false;\r\n\tvar _publicMethods = {};\r\n\tvar _validationTypes = {};\r\n\tvar _settings = {\r\n\t\tbodyClass:                               'fc-checkout-validation--active',\r\n\t\tformSelector:                            'form.checkout',\r\n\t\tformRowSelector:                         '.form-row, .shipping-method__package',\r\n\t\tinputWrapperSelector:                    '.woocommerce-input-wrapper',\r\n\t\tvalidateFieldsSelector:                  '.input-text, select, .shipping-method__options',\r\n\t\treferenceNodeSelector:                   '.input-text, select, .shipping-method__options', // Usually same as `validateFieldsSelector`\r\n\t\tclearValidationCountryChangedSelector:   '#state, #shipping_state, #billing_state',\r\n\t\talwaysValidateFieldsSelector:            '',\r\n\t\tselect2Selector:                         '.select2, .select2-hidden-accessible',\r\n\r\n\t\ttypeRequiredSelector:                    '.validate-required',\r\n\t\ttypeEmailSelector:                       '.validate-email',\r\n\t\ttypeConfirmationSelector:                '[data-confirm-with]',\r\n\t\ttypeShippingMethodSelector:              '.shipping-method__package',\r\n\t\t\r\n\t\tvalidClass:                              'woocommerce-validated',\r\n\t\tinvalidClass:                            'woocommerce-invalid',\r\n\r\n\t\tvalidationMessages: {\r\n\t\t\trequired:                            'This is a required field.',\r\n\t\t\temail:                               'This is not a valid email address.',\r\n\t\t\tconfirmation:                        'This field does not match the related field value.',\r\n\t\t},\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * METHODS\r\n\t */\r\n\r\n\r\n\r\n\t/*!\r\n\t* Merge two or more objects together.\r\n\t* (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n\t* @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\r\n\t* @param   {Object}   objects  The objects to merge together\r\n\t* @returns {Object}            Merged values of defaults and options\r\n\t*/\r\n\tvar extend = function () {\r\n\t\t// Variables\r\n\t\tvar extended = {};\r\n\t\tvar deep = false;\r\n\t\tvar i = 0;\r\n\r\n\t\t// Check if a deep merge\r\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\r\n\t\t\tdeep = arguments[0];\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\t// Merge the object into the extended object\r\n\t\tvar merge = function (obj) {\r\n\t\t\tfor (var prop in obj) {\r\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\r\n\t\t\t\t\t// If property is an object, merge properties\r\n\t\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n\t\t\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\textended[prop] = obj[prop];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Loop through each object and conduct a merge\r\n\t\tfor (; i < arguments.length; i++) {\r\n\t\t\tvar obj = arguments[i];\r\n\t\t\tmerge(obj);\r\n\t\t}\r\n\r\n\t\treturn extended;\r\n    };\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Check if field is hidden to the user.\r\n\t * @param  {Field}  field Field to test visibility.\r\n\t * @return {Boolean}      True if field is hidden to the user.\r\n\t */\r\n\tvar isFieldHidden = function( field ) {\r\n\t\treturn ( field.offsetParent === null );\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if field is in allow list for always validate.\r\n\t * @param  {Field}  field  Field to test for allow list.\r\n\t * @return {Boolean}       True if field is in allow list for always validate.\r\n\t */\r\n\tvar isAlwaysValidate = function( field ) {\r\n\t\t// Bail if field not found or selector empty\r\n\t\tif ( ! field || ! _settings.alwaysValidateFieldsSelector ) { return false; }\r\n\r\n\t\t// Check if field is in allow list\r\n\t\tif ( field.matches( _settings.alwaysValidateFieldsSelector ) ) { return true; }\r\n\t\treturn false;\r\n\t};\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Get the form-row element related to the field.\r\n\t * @param  {Field} field Form field.\r\n\t * @return {Element}     Form row related to the passed field.\r\n\t */\r\n\tvar getFormRow = function( field ) {\r\n\t\t// Bail if field not valid\r\n\t\tif ( !field ) { return; }\r\n\r\n\t\treturn field.closest( _settings.formRowSelector );\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Add markup for inline message of required fields.\r\n\t * @param  {Field}   field         Field to validate.\r\n\t * @param  {Element} formRow       Form row related to the field.\r\n\t * @param  {String}  message       Message to add.\r\n\t * @param  {String}  invalidClass  Type of error used to identify which message is related to which error.\r\n\t */\r\n\tvar addInlineMessage = function( field, formRow, message, invalidClass ) {\r\n\t\t// Bail if field not valid\r\n\t\tif ( ! field ) { return; }\r\n\r\n\t\t// Bail if message is empty\r\n\t\tif ( ! message || message.length == 0 ) { return; }\r\n\r\n\t\tvar inputWrapper = field.closest( _settings.inputWrapperSelector );\r\n\t\tvar referenceNode = inputWrapper.querySelector( _settings.referenceNodeSelector );\r\n\r\n\t\t// Change reference field for select2\r\n\t\tif ( isSelect2Field( field ) ) {\r\n\t\t\tvar newReference = field.parentNode.querySelector( '.select2-container' );\r\n\t\t\tif ( newReference ) { referenceNode = newReference; }\r\n\t\t}\r\n\r\n\t\t// Create message element and add it after the field.\r\n\t\tvar parent = referenceNode.parentNode;\r\n\t\tvar element = document.createElement( 'span' );\r\n\t\telement.className = 'woocommerce-error invalid-' + invalidClass;\r\n\t\telement.innerText = message;\r\n\t\tparent.insertBefore( element, referenceNode.nextSibling );\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Remove inline message from the field.\r\n\t * @param  {Field} field      Field to validate.\r\n\t * @param  {Element} formRow  Form row related to the field.\r\n\t * @param  {String}  invalidClass  Type of error used to identify which message is related to which error.\r\n\t */\r\n\tvar removeInlineMessage = function( field, formRow, invalidClass ) {\r\n\t\tvar messageElements = formRow.querySelectorAll( 'span.woocommerce-error.invalid-' + invalidClass );\r\n\t\tfor ( var i = 0; i < messageElements.length; i++ ) {\r\n\t\t\tmessageElements[ i ].parentNode.removeChild( messageElements[ i ] );\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Check field is a select2 element.\r\n\t * @param  {Field}  field     Field to check.\r\n\t * @return {Boolean}          True if field is select2.\r\n\t */\r\n\tvar isSelect2Field = function( field ) {\r\n\t\tif ( field.closest( _settings.select2Selector ) ) { return true; }\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if field is a select field.\r\n\t * @param  {Element}  field  Field to check.\r\n\t * @return {Boolean}         True if is a select field.\r\n\t */\r\n\tvar isSelectField = function( field ) {\r\n\t\tif ( field.matches( 'select' ) ) { return true; }\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if field has value.\r\n\t * @param  {Field}   field  Field to check.\r\n\t * @return {Boolean}        True if field has value.\r\n\t */\r\n\t_publicMethods.hasValue = function( field ) {\r\n\t\t// Check for select 2 field\r\n\t\tif ( isSelectField( field ) ) {\r\n\t\t\tif ( field.options && field.selectedIndex > -1 && field.options[ field.selectedIndex ].value != '' ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check for all other fields\r\n\t\tif ( field.value != '' ) { return true; }\r\n\t\t\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if form row is required.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t * @return {Boolean}          True if required.\r\n\t */\r\n\tvar isRequiredField = function( field, formRow ) {\r\n\t\tif ( ! formRow.matches( _settings.typeRequiredSelector ) ) { return false; }\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Validate required field.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t */\r\n\tvar validateRequired = function( field, formRow ) {\r\n\t\t// Bail if field does not have a value\r\n\t\tif ( ! _publicMethods.hasValue( field ) ) { return { valid: false, message: _settings.validationMessages.required }; }\r\n\r\n\t\treturn { valid: true };\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if form row is email field.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t * @return {Boolean}          True if is email field.\r\n\t */\r\n\tvar isEmailField = function( field, formRow ) {\r\n\t\tif ( ! formRow.matches( _settings.typeEmailSelector ) ) { return false; }\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Validate email field.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t */\r\n\tvar validateEmail = function( field, formRow ) {\r\n\t\t// Bail if does not have value\r\n\t\tif ( ! _publicMethods.hasValue( field ) ) { return { valid: true }; }\r\n\r\n\t\t/* https://stackoverflow.com/questions/2855865/jquery-validate-e-mail-address-regex */\r\n\t\tvar emailPattern = new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i);\r\n\r\n\t\t// Validate email value\r\n\t\tif ( ! emailPattern.test( field.value ) ) { return { valid: false, message: _settings.validationMessages.email }; }\r\n\r\n\t\treturn { valid: true };\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if form row is a confirmation field.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t * @return {Boolean}          True if is a confimation field.\r\n\t */\r\n\tvar isConfirmationField = function( field, formRow ) {\r\n\t\tif ( ! formRow.querySelector( _settings.typeConfirmationSelector ) ) { return false; }\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Validate confirmation field.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t */\r\n\tvar validateConfirmation = function( field, formRow ) {\r\n\t\t// Bail if does not have value\r\n\t\tif ( ! _publicMethods.hasValue( field ) ) { return { valid: false }; }\r\n\r\n\t\t// Get confirmation field\r\n\t\tvar form = formRow.closest( 'form' );\r\n\t\tvar confirmWith = form ? form.querySelector( field.getAttribute( 'data-confirm-with' ) ) : null;\r\n\r\n\t\t// Validate fields have same value\r\n\t\tif ( confirmWith && field.value == confirmWith.value ) { return { valid: false, message: _settings.validationMessages.confirmation }; }\r\n\r\n\t\treturn { valid: true };\r\n\t};\r\n\r\n\t/**\r\n\t * Check if form row is required.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t * @return {Boolean}          True if required.\r\n\t */\r\n\t var isShippingMethodField = function( field, formRow ) {\r\n\t\tif ( ! formRow.matches( _settings.typeShippingMethodSelector ) ) { return false; }\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Validate required field.\r\n\t * @param  {Field}    field Field for validation.\r\n\t * @param  {Element}  formRow Form row element.\r\n\t */\r\n\tvar validateShippingMethod = function( field, formRow ) {\r\n\t\tvar selectedShippingMethod = formRow.querySelector( 'input[type=\"radio\"]:checked' );\r\n\r\n\t\t// Bail if field does not have a value\r\n\t\tif ( ! selectedShippingMethod ) { return { valid: false, message: _settings.validationMessages.required }; }\r\n\r\n\t\treturn { valid: true };\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if field needs validation.\r\n\t * @param  {Field} field      Field to validate.\r\n\t * @param  {Element} formRow  Form row for validation.\r\n\t * @return {Boolean}          True if field needs any validation.\r\n\t */\r\n\tvar needsValidation = function( field, formRow ) {\r\n\t\t// Bail if field should always validate\r\n\t\tif ( isAlwaysValidate( field ) ) { return true; }\r\n\r\n\t\t// Test if field needs validation from any validation type\r\n\t\tvar validationTypeNames = Object.getOwnPropertyNames( _validationTypes );\r\n\t\tfor ( var i = 0; i < validationTypeNames.length; i++) {\r\n\t\t\tvar validationTypeName = validationTypeNames[i];\r\n\t\t\tvar validationType = _validationTypes[ validationTypeName ];\r\n\t\t\tif ( validationType.needsValidation( field, formRow ) ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Process validation results of a field.\r\n\t * @param  {Field} field             Field to validation.\r\n\t * @param  {Element} formRow          Form row element.\r\n\t * @param  {Array} validationResults Validation results array.\r\n\t * @return {Boolean}           True if all fields are valid.\r\n\t */\r\n\tvar processValidationResults = function( field, formRow, validationResults ) {\r\n\t\tvar valid = true;\r\n\r\n\t\t// Iterate validation results\r\n\t\tvar validationResultsNames = Object.getOwnPropertyNames( validationResults );\r\n\t\tfor ( var i = 0; i < validationResultsNames.length; i++ ) {\r\n\t\t\tvar validationTypeName = validationResultsNames[ i ];\r\n\t\t\tvar validationType = _validationTypes[ validationTypeName ];\r\n\t\t\tvar result = validationResults[ validationTypeName ].valid;\r\n\t\t\tvar message = validationResults[ validationTypeName ].message;\r\n\t\t\tvar invalidClass = validationType.invalidClass;\r\n\r\n\t\t\t// Remove messages for the current validation type\r\n\t\t\tremoveInlineMessage( field, formRow, invalidClass );\r\n\r\n\t\t\t// Toggle validation `invalidClass` according to validation `result`\r\n\t\t\tformRow.classList.toggle( _settings.invalidClass +'-'+ validationType.invalidClass, true !== result );\r\n\r\n\t\t\t// Maybe set field as invalid\r\n\t\t\tif ( true !== result ) {\r\n\t\t\t\tvalid = false;\r\n\t\t\t\taddInlineMessage( field, formRow, message, invalidClass );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Toggle general field valid/invalid classes\r\n\t\tformRow.classList.toggle( _settings.validClass, valid );\r\n\t\tformRow.classList.toggle( _settings.invalidClass, !valid );\r\n\r\n\t\treturn valid;\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear the state fields validation status classes when the field loses the value due changes to the country fields.\r\n\t *\r\n\t * @param   jQuery.Event  event    Event object as a `jQuery.Event`.\r\n\t * @param   string        country  Selected country code value of the related country field.\r\n\t * @param   jQuery.fn     wrapper  jQuery object representing the field wrapper element related to the country field that was changed. See variable `wrapper_selectors` ~LN103 of the `country-select.js`.\r\n\t */\r\n\tvar maybeClearStateFields = function( event, country, wrapper ) {\r\n\t\t// Bail if jQuery is not available\r\n\t\tif ( ! _hasJQuery ) { return; }\r\n\t\t\r\n\t\tvar wrappersList = $( wrapper ).toArray();\r\n\r\n\t\twrappersList.forEach( function( wrapperItem ) {\r\n\t\t\t\r\n\t\t\tvar fields = Array.from( wrapperItem.querySelectorAll( _settings.clearValidationCountryChangedSelector ) );\r\n\t\t\t\r\n\t\t\tfields.forEach( function( field ) {\r\n\t\t\t\t\r\n\t\t\t\tif ( '' == field.value ) {\r\n\t\t\t\t\tvar formRow = field.closest( _settings.formRowSelector );\r\n\t\t\t\t\t_publicMethods.clearValidationResults( field, formRow );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Handle document clicks and route to the appropriate function.\r\n\t */\r\n\tvar handleValidateEvent = function( e ) {\r\n\t\tvar field = e.target;\r\n\r\n\t\t// Get correct field when is select2\r\n\t\tif ( isSelect2Field( e.target ) ) {\r\n\t\t\tvar formRow = e.target.closest( _settings.formRowSelector );\r\n\r\n\t\t\tif ( formRow ) {\r\n\t\t\t\tfield = formRow.querySelector( 'select' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_publicMethods.validateField( field );\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Register validation types.\r\n\t */\r\n\tvar registerValidationTypes = function() {\r\n\t\t_publicMethods.registerValidationType( 'required', 'required-field', isRequiredField, validateRequired );\r\n\t\t_publicMethods.registerValidationType( 'email', 'email', isEmailField, validateEmail );\r\n\t\t_publicMethods.registerValidationType( 'confirmation', 'confirmation-field', isConfirmationField, validateConfirmation );\r\n\t\t_publicMethods.registerValidationType( 'shipping-method', 'shipping-method-field', isShippingMethodField, validateShippingMethod );\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear validation results status of a field.\r\n\t * @param  {Field} field             Field to validation.\r\n\t * @param  {Element} formRow          Form row element.\r\n\t */\r\n\t _publicMethods.clearValidationResults = function( field, formRow ) {\r\n\t\t// Bail if field or form row invalid\r\n\t\tif ( ! field || ! formRow ) { return; }\r\n\t\t\r\n\t\t// Remove invalid classes for validation types\r\n\t\tvar validationTypeKeys = Object.keys( _validationTypes );\r\n\t\tfor ( var i = 0; i < validationTypeKeys.length; i++ ) {\r\n\t\t\tvar type = validationTypeKeys[i];\r\n\t\t\tformRow.classList.remove( _settings.invalidClass +'-'+ type );\r\n\t\t\tformRow.classList.remove( _settings.invalidClass +'-'+ type + '-field' );\r\n\t\t}\r\n\r\n\t\t// Remove valid/invalid classes\r\n\t\tformRow.classList.remove( _settings.validClass );\r\n\t\tformRow.classList.remove( _settings.invalidClass );\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Test multiple validations on the passed field.\r\n\t * @param  {Field} field    Field for validation.\r\n\t * @return {Boolean}        True if field is valid.\r\n\t */\r\n\t_publicMethods.validateField = function( field, validateHidden ) {\r\n\t\t// Bail if field is null\r\n\t\tif ( ! field ) { return true; }\r\n\r\n\t\tvar validationResults = {},\r\n\t\t\tformRow = getFormRow( field );\r\n\r\n\t\t// Bail if formRow not found\r\n\t\tif ( ! formRow ) { return true; }\r\n\r\n\t\t// Bail if hidden to the user\r\n\t\tif ( ! isAlwaysValidate( field ) && validateHidden !== true && isFieldHidden( field ) ) { return true; }\r\n\r\n\t\t// Bail if field doesn't need validation\r\n\t\tif ( ! needsValidation( field, formRow ) ) { return true; }\r\n\r\n\t\t// Execute validate field for all applicable validation types\r\n\t\tvar validationTypeNames = Object.getOwnPropertyNames( _validationTypes );\r\n\t\tfor ( var i = 0; i < validationTypeNames.length; i++) {\r\n\t\t\tvar validationTypeName = validationTypeNames[i];\r\n\t\t\tvar validationType = _validationTypes[ validationTypeName ];\r\n\t\t\tif ( validationType.needsValidation( field, formRow ) ) {\r\n\t\t\t\tvalidationResults[ validationTypeName ] = validationType.validate( field, formRow );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO: Maybe trigger validation of related fields (ie zip > State, Country)\r\n\r\n\t\t// Process results\r\n\t\treturn processValidationResults( field, formRow, validationResults );\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Trigger validation in all fields inside the container.\r\n\t * @param  {Element} container Element to look for fields in, if not passed consider the checkout form as container.\r\n\t * @return {Boolean}           True if all fields are valid.\r\n\t */\r\n\t_publicMethods.validateAllFields = function( container, validateHidden ) {\r\n\t\tif ( ! container ) { container = document.querySelector( _settings.formSelector ) }\r\n\r\n\t\tvar all_valid = true;\r\n\t\tvar fields = container.querySelectorAll( _settings.validateFieldsSelector );\r\n\r\n\t\tfor ( var i = 0; i < fields.length; i++ ) {\r\n\t\t\tif ( ! _publicMethods.validateField( fields[i], validateHidden ) ) {\r\n\t\t\t\tall_valid = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn all_valid;\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Register a new validation type.\r\n\t *\r\n\t * @param   String    validationType      A `snake_case` string representing the type of validation. Used as the validation type property on the `_validationTypes` object.\r\n\t * @param   String    invalidClass        CSS class to be used on the `form-row` related to the field when the validation fails.\r\n\t * @param   Function  fnNeedsValidation   A function to check if the field needs validation, should return `true` when the field needs validation.\r\n\t * @param   Function  fnValidate          A function to validate the form field, should accept 2 parameters being `field` and `formRow`, both expected to be an HTMLElement.\r\n\t *\r\n\t * @return  Boolean                  `true` when the registration of the validation type has been successful, `false` otherwise.\r\n\t */\r\n\t_publicMethods.registerValidationType = function( validationType, invalidClass, fnNeedsValidation, fnValidate ) {\r\n\t\t// Bail if _validationTypes not initialized\r\n\t\tif ( ! _validationTypes ) { return false; }\r\n\r\n\t\t// Bail if validationType or invalidClass not a string\r\n\t\tif ( typeof validationType !== 'string' || typeof invalidClass !== 'string' ) { return false; }\r\n\r\n\t\t// Bail if fnNeedsValidation or fnValidate are not functions\r\n\t\tif ( ! ( fnNeedsValidation instanceof Function ) || ! ( fnValidate instanceof Function ) ) { return false; }\r\n\t\t\r\n\t\t// Bail if validation type already registered\r\n\t\tif ( _validationTypes.hasOwnProperty( validationType ) ) {\r\n\t\t\tconsole.log( 'Validation type \"' + validationType + '\" already registered.' );\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Register validation type\r\n\t\t_validationTypes[ validationType ] = {\r\n\t\t\tinvalidClass: invalidClass,\r\n\t\t\tneedsValidation: fnNeedsValidation,\r\n\t\t\tvalidate: fnValidate,\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Return the registered validation types.\r\n\t *\r\n\t * @return  Object  Object with the registered validation types as properties.\r\n\t */\r\n\t_publicMethods.getValidationTypes = function() {\r\n\t\treturn _validationTypes;\r\n\t}\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Initialize component and set related handlers.\r\n\t */\r\n\t_publicMethods.init = function( options ) {\r\n\t\tif ( _hasInitialized ) return;\r\n\r\n\t\t// Merge settings\r\n\t\t_settings = extend( _settings, options );\r\n\r\n\t\t// Register validation types\r\n\t\tregisterValidationTypes();\r\n\r\n\t\tif ( _hasJQuery ) {\r\n\t\t\t$( _settings.formSelector ).on( 'input validate change', _settings.validateFieldsSelector, handleValidateEvent );\r\n\t\t\t\r\n\t\t\t// Run on checkout or cart changes\r\n\t\t\t$( document ).on( 'load_ajax_content_done', _publicMethods.init );\r\n\t\t\t$( document ).on( 'country_to_state_changed', maybeClearStateFields );\r\n\t\t}\r\n\r\n\t\t// Add body class\r\n\t\tdocument.body.classList.add( _settings.bodyClass );\r\n\r\n\t\t_hasInitialized = true;\r\n\t};\r\n\r\n\r\n\t\r\n\t//\r\n\t// Public APIs\r\n\t//\r\n\treturn _publicMethods;\r\n\r\n});\r\n"],"names":["root","factory","define","amd","exports","module","CheckoutValidation","global","this","window","extend","extended","deep","i","Object","prototype","toString","call","arguments","length","prop","obj","hasOwnProperty","isAlwaysValidate","field","_settings","alwaysValidateFieldsSelector","matches","isRequiredField","formRow","typeRequiredSelector","validateRequired","_publicMethods","hasValue","valid","message","validationMessages","required","isEmailField","typeEmailSelector","validateEmail","RegExp","test","value","email","isConfirmationField","querySelector","typeConfirmationSelector","validateConfirmation","confirmWith","form","closest","getAttribute","confirmation","isShippingMethodField","typeShippingMethodSelector","validateShippingMethod","processValidationResults","validationResults","validationResultsNames","getOwnPropertyNames","validationTypeName","validationType","_validationTypes","result","invalidClass","messageElements","querySelectorAll","parentNode","removeChild","classList","toggle","element","referenceNode","inputWrapperSelector","referenceNodeSelector","parent","isSelect2Field","newReference","document","createElement","className","innerText","insertBefore","nextSibling","validClass","maybeClearStateFields","event","country","wrapper","_hasJQuery","$","toArray","forEach","wrapperItem","Array","from","clearValidationCountryChangedSelector","formRowSelector","clearValidationResults","handleValidateEvent","e","target","validateField","jQuery","_hasInitialized","bodyClass","formSelector","validateFieldsSelector","select2Selector","options","selectedIndex","validationTypeKeys","keys","type","remove","validateHidden","offsetParent","validationTypeNames","needsValidation","validate","validateAllFields","container","all_valid","fields","registerValidationType","fnNeedsValidation","fnValidate","Function","console","log","getValidationTypes","init","on","body","add"],"mappings":"AAOA,CAAA,SAAWA,EAAMC,GACO,YAAlB,OAAOC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,EAAY,CAAC,EACM,UAAnB,OAAOG,QAClBC,OAAOD,QAAUH,EAAY,EAE7BD,EAAKM,mBAAqBL,EAAY,CAEvC,EAAoB,aAAlB,OAAOM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,GAEjF,aAiDa,SAATU,IAEH,IAAIC,EAAW,GACXC,EAAO,CAAA,EACPC,EAAI,EAuBR,IApBwD,qBAAnDC,OAAOC,UAAUC,SAASC,KAAMC,UAAU,EAAG,IACjDN,EAAOM,UAAU,GACjBL,CAAC,IAkBKA,EAAIK,UAAUC,OAAQN,CAAC,GAAI,CAbxBO,EAAAA,KAAAA,EAcT,IAdSA,EADYC,EAeXH,UAAUL,GAdpB,IAASO,KAAQC,EACZA,EAAIC,eAAeF,CAAI,IAEtBR,GAAsD,oBAA9CE,OAAOC,UAAUC,SAASC,KAAKI,EAAID,EAAK,EACnDT,EAASS,GAAQV,EAAOC,EAASS,GAAOC,EAAID,EAAK,EAEjDT,EAASS,GAAQC,EAAID,GAUzB,CAEA,OAAOT,CACL,CAoBoB,SAAnBY,EAA6BC,GAEhC,MAAA,EAAOA,CAAAA,GAAWC,CAAAA,EAAUC,8BAGvBF,CAAAA,EAAMG,QAASF,EAAUC,4BAA6B,EAE5D,CAuHsB,SAAlBE,EAA4BJ,EAAOK,GACtC,MAAOA,CAAAA,CAAAA,EAAQF,QAASF,EAAUK,oBAAqB,CAExD,CAOuB,SAAnBC,EAA6BP,EAAOK,GAEvC,OAAOG,EAAeC,SAAUT,CAAM,EAE/B,CAAEU,MAAO,CAAA,CAAK,EAF8B,CAAEA,MAAO,CAAA,EAAOC,QAASV,EAAUW,mBAAmBC,QAAS,CAGnH,CAUmB,SAAfC,EAAyBd,EAAOK,GACnC,MAAOA,CAAAA,CAAAA,EAAQF,QAASF,EAAUc,iBAAkB,CAErD,CAOoB,SAAhBC,EAA0BhB,EAAOK,GAEpC,MAAOG,CAAAA,EAAeC,SAAUT,CAAM,GAGnB,IAAIiB,OAAO,44BAA44B,EAGt5BC,KAAMlB,EAAMmB,KAAM,EANa,CAAET,MAAO,CAAA,CAAK,EAMd,CAAEA,MAAO,CAAA,EAAOC,QAASV,EAAUW,mBAAmBQ,KAAM,CAGhH,CAU0B,SAAtBC,EAAgCrB,EAAOK,GAC1C,MAAOA,CAAAA,CAAAA,EAAQiB,cAAerB,EAAUsB,wBAAyB,CAElE,CAO2B,SAAvBC,EAAiCxB,EAAOK,GAE3C,OAAOG,EAAeC,SAAUT,CAAM,GAIlCyB,GADAC,EAAOrB,EAAQsB,QAAS,MAAO,GACVD,EAAKJ,cAAetB,EAAM4B,aAAc,mBAAoB,CAAE,EAAI,OAGvE5B,EAAMmB,OAASM,EAAYN,MAAiB,CAAET,MAAO,CAAA,EAAOC,QAASV,EAAUW,mBAAmBiB,YAAa,EAE5H,CAAEnB,MAAO,CAAA,CAAK,EAT8B,CAAEA,MAAO,CAAA,CAAM,CAUnE,CAQ6B,SAAxBoB,EAAkC9B,EAAOK,GAC7C,MAAOA,CAAAA,CAAAA,EAAQF,QAASF,EAAU8B,0BAA2B,CAE9D,CAO6B,SAAzBC,EAAmChC,EAAOK,GAI7C,OAH6BA,EAAQiB,cAAe,6BAA8B,EAK3E,CAAEZ,MAAO,CAAA,CAAK,EAFoB,CAAEA,MAAO,CAAA,EAAOC,QAASV,EAAUW,mBAAmBC,QAAS,CAGzG,CAoC+B,SAA3BoB,EAAqCjC,EAAOK,EAAS6B,GAKxD,IAJA,IAAIxB,EAAQ,CAAA,EAGRyB,EAAyB7C,OAAO8C,oBAAqBF,CAAkB,EACjE7C,EAAI,EAAGA,EAAI8C,EAAuBxC,OAAQN,CAAC,GAAK,CACzD,IAAIgD,EAAqBF,EAAwB9C,GAC7CiD,EAAiBC,EAAkBF,GACnCG,EAASN,EAAmBG,GAAqB3B,MACjDC,EAAUuB,EAAmBG,GAAqB1B,QAClD8B,EAAeH,EAAeG,aAlNzBpD,EADNqD,EAAAA,KAAAA,EACJ,IA8MC,IAhNkDD,EAuNbA,EAtNlCC,EAsNyBrC,EAtNCsC,iBAAkB,kCAAoCF,CAAa,EACvFpD,EAAI,EAAGA,EAAIqD,EAAgB/C,OAAQN,CAAC,GAC7CqD,EAAiBrD,GAAIuD,WAAWC,YAAaH,EAAiBrD,EAAI,EAuNlEgB,EAAQyC,UAAUC,OAAQ9C,EAAUwC,aAAc,IAAKH,EAAeG,aAAc,CAAA,IAASD,CAAO,EAG/F,CAAA,IAASA,IACb9B,EAAQ,CAAA,EA7PsCC,EA8PZA,EA9PqB8B,EA8PZA,EA5OzCO,EAVAC,EAAAA,KAAAA,EAR4BjD,EA8PZA,IAzPbW,GAA6B,GAAlBA,EAAQhB,SAGtBsD,EADejD,EAAM2B,QAAS1B,EAAUiD,oBAAqB,EAChC5B,cAAerB,EAAUkD,qBAAsB,EAS5EC,GAJmBH,EAFlBI,EAAgBrD,CAAM,IACtBsD,EAAetD,EAAM4C,WAAWtB,cAAe,oBAAqB,GAClCgC,EAI1BL,GAAcL,YACvBI,EAAUO,SAASC,cAAe,MAAO,GACrCC,UAAY,6BAA+BhB,EACnDO,EAAQU,UAAY/C,EACpByC,EAAOO,aAAcX,EAASC,EAAcW,WAAY,EA2OxD,CAMA,OAHAvD,EAAQyC,UAAUC,OAAQ9C,EAAU4D,WAAYnD,CAAM,EACtDL,EAAQyC,UAAUC,OAAQ9C,EAAUwC,aAAc,CAAC/B,CAAM,EAElDA,CACR,CAW4B,SAAxBoD,EAAkCC,EAAOC,EAASC,GAE9CC,GAEYC,EAAGF,CAAQ,EAAEG,QAAQ,EAE3BC,QAAS,SAAUC,GAElBC,MAAMC,KAAMF,EAAY3B,iBAAkB1C,EAAUwE,qCAAsC,CAAE,EAElGJ,QAAS,SAAUrE,GAEzB,IACKK,EADA,IAAML,EAAMmB,QACZd,EAAUL,EAAM2B,QAAS1B,EAAUyE,eAAgB,EACvDlE,EAAemE,uBAAwB3E,EAAOK,CAAQ,EAGxD,CAAE,CAEH,CAAE,CACH,CAO0B,SAAtBuE,EAAgCC,GACnC,IAAI7E,EAAQ6E,EAAEC,OAGTzB,EAAgBwB,EAAEC,MAAO,IACzBzE,EAAUwE,EAAEC,OAAOnD,QAAS1B,EAAUyE,eAAgB,KAGzD1E,EAAQK,EAAQiB,cAAe,QAAS,GAI1Cd,EAAeuE,cAAe/E,CAAM,CACrC,CA9bA,IAAImE,EAAIa,OACJd,EAAoB,MAALC,EAEfc,EAAkB,CAAA,EAClBzE,EAAiB,GACjB+B,EAAmB,GACnBtC,EAAY,CACfiF,UAAyC,iCACzCC,aAAyC,gBACzCT,gBAAyC,uCACzCxB,qBAAyC,6BACzCkC,uBAAyC,iDACzCjC,sBAAyC,iDACzCsB,sCAAyC,0CACzCvE,6BAAyC,GACzCmF,gBAAyC,uCAEzC/E,qBAAyC,qBACzCS,kBAAyC,kBACzCQ,yBAAyC,sBACzCQ,2BAAyC,4BAEzC8B,WAAyC,wBACzCpB,aAAyC,sBAEzC7B,mBAAoB,CACnBC,SAAqC,4BACrCO,MAAqC,qCACrCS,aAAqC,oDACtC,CACD,EAmJIwB,EAAiB,SAAUrD,GAC9B,MAAKA,CAAAA,CAAAA,EAAM2B,QAAS1B,EAAUoF,eAAgB,CAE/C,EAqBA7E,EAAeC,SAAW,SAAUT,GAEnC,OAAoBA,EAbTG,QAAS,QAAS,EAcvBH,CAAAA,EAAAA,EAAMsF,SAAiC,CAAC,EAAvBtF,EAAMuF,eAAoE,IAA9CvF,EAAMsF,QAAStF,EAAMuF,eAAgBpE,OASpE,IAAfnB,EAAMmB,KAGZ,EA2ZA,OAhKCX,EAAemE,uBAAyB,SAAU3E,EAAOK,GAEzD,GAAOL,GAAWK,EAAlB,CAIA,IADA,IAAImF,EAAqBlG,OAAOmG,KAAMlD,CAAiB,EAC7ClD,EAAI,EAAGA,EAAImG,EAAmB7F,OAAQN,CAAC,GAAK,CACrD,IAAIqG,EAAOF,EAAmBnG,GAC9BgB,EAAQyC,UAAU6C,OAAQ1F,EAAUwC,aAAc,IAAKiD,CAAK,EAC5DrF,EAAQyC,UAAU6C,OAAQ1F,EAAUwC,aAAc,IAAKiD,EAAO,QAAS,CACxE,CAGArF,EAAQyC,UAAU6C,OAAQ1F,EAAU4D,UAAW,EAC/CxD,EAAQyC,UAAU6C,OAAQ1F,EAAUwC,YAAa,CAZX,CAavC,EASAjC,EAAeuE,cAAgB,SAAU/E,EAAO4F,GAE/C,GAAK,CAAE5F,EAAU,MAAO,CAAA,EAExB,IAAIkC,EAAoB,GACvB7B,EA5Xe,SAAUL,GAE1B,GAAMA,EAEN,OAAOA,EAAM2B,QAAS1B,EAAUyE,eAAgB,CACjD,EAuXwB1E,CAAM,EAG7B,GAAK,CAAEK,EAAY,MAAO,CAAA,EAG1B,GAAK,CAAEN,EAAkBC,CAAM,GAAwB,CAAA,IAAnB4F,GA5ZJ,OA4Z8C5F,EA5Z/D6F,aA4Z2E,MAAO,CAAA,EAGjG,GAAK,CAtKgB,SAAU7F,EAAOK,GAEtC,GAAKN,EAAkBC,CAAM,EAAM,MAAO,CAAA,EAI1C,IADA,IAAI8F,EAAsBxG,OAAO8C,oBAAqBG,CAAiB,EAC7DlD,EAAI,EAAGA,EAAIyG,EAAoBnG,OAAQN,CAAC,GAAI,CACrD,IAAIgD,EAAqByD,EAAoBzG,GAE7C,GADqBkD,EAAkBF,GACnB0D,gBAAiB/F,EAAOK,CAAQ,EACnD,MAAO,CAAA,CAET,CAEA,MAAO,CAAA,CACR,EAuJyBL,EAAOK,CAAQ,EAAM,MAAO,CAAA,EAIpD,IADA,IAAIyF,EAAsBxG,OAAO8C,oBAAqBG,CAAiB,EAC7DlD,EAAI,EAAGA,EAAIyG,EAAoBnG,OAAQN,CAAC,GAAI,CACrD,IAAIgD,EAAqByD,EAAoBzG,GACzCiD,EAAiBC,EAAkBF,GAClCC,EAAeyD,gBAAiB/F,EAAOK,CAAQ,IACnD6B,EAAmBG,GAAuBC,EAAe0D,SAAUhG,EAAOK,CAAQ,EAEpF,CAKA,OAAO4B,EAA0BjC,EAAOK,EAAS6B,CAAkB,CACpE,EASA1B,EAAeyF,kBAAoB,SAAUC,EAAWN,GAMvD,IAHA,IAAIO,EAAY,CAAA,EACZC,GAHGF,EAAAA,GAA0B3C,SAASjC,cAAerB,EAAUkF,YAAa,GAGzDxC,iBAAkB1C,EAAUmF,sBAAuB,EAEhE/F,EAAI,EAAGA,EAAI+G,EAAOzG,OAAQN,CAAC,GAC7BmB,EAAeuE,cAAeqB,EAAO/G,GAAIuG,CAAe,IAC9DO,EAAY,CAAA,GAId,OAAOA,CACR,EAcA3F,EAAe6F,uBAAyB,SAAU/D,EAAgBG,EAAc6D,EAAmBC,GAElG,MAAOhE,CAAAA,CAAAA,GAGwB,UAA1B,OAAOD,GAAuD,UAAxB,OAAOG,GAGzC6D,aAA6BE,UAAkBD,aAAsBC,WAGzEjE,EAAiBzC,eAAgBwC,CAAe,GACpDmE,QAAQC,IAAK,oBAAsBpE,EAAiB,uBAAwB,EACrE,CAAA,IAIRC,EAAkBD,GAAmB,CACpCG,aAAcA,EACdsD,gBAAiBO,EACjBN,SAAUO,CACX,EAEO,CAAA,GACR,EASA/F,EAAemG,mBAAqB,WACnC,OAAOpE,CACR,EAOA/B,EAAeoG,KAAO,SAAUtB,GAC1BL,IAGLhF,EAAYf,EAAQe,EAAWqF,CAAQ,EArJvC9E,EAAe6F,uBAAwB,WAAY,iBAAkBjG,EAAiBG,CAAiB,EACvGC,EAAe6F,uBAAwB,QAAS,QAASvF,EAAcE,CAAc,EACrFR,EAAe6F,uBAAwB,eAAgB,qBAAsBhF,EAAqBG,CAAqB,EACvHhB,EAAe6F,uBAAwB,kBAAmB,wBAAyBvE,EAAuBE,CAAuB,EAuJ5HkC,IACJC,EAAGlE,EAAUkF,YAAa,EAAE0B,GAAI,wBAAyB5G,EAAUmF,uBAAwBR,CAAoB,EAG/GT,EAAGZ,QAAS,EAAEsD,GAAI,yBAA0BrG,EAAeoG,IAAK,EAChEzC,EAAGZ,QAAS,EAAEsD,GAAI,2BAA4B/C,CAAsB,GAIrEP,SAASuD,KAAKhE,UAAUiE,IAAK9G,EAAUiF,SAAU,EAEjDD,EAAkB,CAAA,EACnB,EAOOzE,CAER,CAAC"}