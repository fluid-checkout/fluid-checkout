{"version":3,"file":"../address-i18n-234.min.js","sources":["address-i18n-234.js"],"sourcesContent":["/**\n * Address Internationalization Script\n * \n * Replaces the original WooCommerce `address-i18n.js`.\n */\n\n/*global wc_address_i18n_params */\njQuery( function( $ ) {\n\n\t// wc_address_i18n_params is required to continue, ensure the object exists\n\tif ( typeof wc_address_i18n_params === 'undefined' ) {\n\t\treturn false;\n\t}\n\n\tvar _settings = {\n\t\tformRowExpansibleSelector: '.form-row.fc-expansible-form-section',\n\t\texpansibleToggleSelector: '.fc-expansible-form-section__toggle',\n\t\texpansibleContentSelector: '.fc-expansible-form-section__content',\n\t\tinputSelector: 'input, select, textarea',\n\t\tcountryFieldsSelector: '#billing_country, #shipping_country, #country',\n\t\taddressFieldGroupSelector: '.woocommerce-billing-fields, .woocommerce-shipping-fields, .woocommerce-address-fields',\n\t};\n\n\tvar locale_json = wc_address_i18n_params.locale.replace( /&quot;/g, '\"' ), locale = JSON.parse( locale_json );\n\n\tfunction field_is_required( field, is_required ) {\n\t\t// CHANGE: Get collapsible field elements\n\t\tvar formRow, fieldCollapsibleToggle, fieldCollapsibleContent, input;\n\t\tif ( window.CollapsibleBlock && field.length > 0 ) {\n\t\t\tformRow = field[0].closest( _settings.formRowExpansibleSelector );\n\t\t\tif ( formRow ) {\n\t\t\t\tfieldCollapsibleToggle = formRow.querySelector( _settings.expansibleToggleSelector );\n\t\t\t\tfieldCollapsibleContent = formRow.querySelector( _settings.expansibleContentSelector );\n\t\t\t}\n\t\t}\n\t\t// CHANGE: END - Get collapsible field elements\n\t\t\n\t\tif ( is_required ) {\n\t\t\tfield.find( 'label .optional' ).remove();\n\t\t\tfield.addClass( 'validate-required' );\n\n\t\t\tif ( field.find( 'label .required' ).length === 0 ) {\n\t\t\t\tfield.find( 'label' ).append(\n\t\t\t\t\t'&nbsp;<abbr class=\"required\" title=\"' +\n\t\t\t\t\twc_address_i18n_params.i18n_required_text +\n\t\t\t\t\t'\">*</abbr>'\n\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\t\t// CHANGE: Try to expand if the field is required\n\t\t\tif ( fieldCollapsibleToggle && fieldCollapsibleContent ) {\n\t\t\t\t// CollapsibleBlock.collapse( fieldCollapsibleToggle, false ); // Collapse without transitions\n\t\t\t\t// CollapsibleBlock.expand( fieldCollapsibleContent, false, false ); // Expand without transitions and without setting focus\n\t\t\t}\n\t\t\t// CHANGE: END - Try to expand if the field is required\n\t\t} else {\n\t\t\tfield.find( 'label .required' ).remove();\n\t\t\tfield.removeClass( 'validate-required woocommerce-invalid woocommerce-invalid-required-field' );\n\n\t\t\tif ( field.find( 'label .optional' ).length === 0 ) {\n\t\t\t\tfield.find( 'label' ).append( '&nbsp;<span class=\"optional\">(' + wc_address_i18n_params.i18n_optional_text + ')</span>' );\n\t\t\t}\n\n\t\t\t// CHANGE: Try to collapse if the field is optional and empty\n\t\t\tif ( fieldCollapsibleToggle && fieldCollapsibleContent ) {\n\t\t\t\tvar input = field[0].querySelector( _settings.inputSelector );\n\t\t\t\tif ( input && '' == input.value ) {\n\t\t\t\t\t// CollapsibleBlock.expand( fieldCollapsibleToggle, false, false ); // Expand without transitions and without setting focus\n\t\t\t\t\t// CollapsibleBlock.collapse( fieldCollapsibleContent, false ); // Collapse without transitions\n\t\t\t\t}\n\t\t\t}\n\t\t\t// CHANGE: END - Try to collapse if the field is optional and empty\n\t\t}\n\t}\n\n\t// Handle locale\n\t// CHANGE: Extract function to process country to state changing as it needs to be used when event `updated_checkout` is triggered\n\tvar process_country_to_state_changing = function( event, country, wrapper ) {\n\t\tvar thisform = wrapper, thislocale;\n\n\t\tif ( typeof locale[ country ] !== 'undefined' ) {\n\t\t\tthislocale = locale[ country ];\n\t\t} else {\n\t\t\tthislocale = locale['default'];\n\t\t}\n\n\t\t// CHANGE: Add selector for address fields without prefix\n\t\tvar $postcodefield = thisform.find( '#postcode_field, #billing_postcode_field, #shipping_postcode_field' ),\n\t\t\t$cityfield     = thisform.find( '#city_field, #billing_city_field, #shipping_city_field' ),\n\t\t\t$statefield    = thisform.find( '#state_field, #billing_state_field, #shipping_state_field' );\n\n\t\tif ( ! $postcodefield.attr( 'data-o_class' ) ) {\n\t\t\t$postcodefield.attr( 'data-o_class', $postcodefield.attr( 'class' ) );\n\t\t\t$cityfield.attr( 'data-o_class', $cityfield.attr( 'class' ) );\n\t\t\t$statefield.attr( 'data-o_class', $statefield.attr( 'class' ) );\n\t\t}\n\n\t\tvar locale_fields = JSON.parse( wc_address_i18n_params.locale_fields );\n\n\t\t$.each( locale_fields, function( key, value ) {\n\n\t\t\tvar field       = thisform.find( value ),\n\t\t\t\tfieldLocale = $.extend( true, {}, locale['default'][ key ], thislocale[ key ] );\n\n\t\t\t// Labels.\n\t\t\tif ( typeof fieldLocale.label !== 'undefined' ) {\n\t\t\t\tfield.find( 'label' ).html( fieldLocale.label );\n\t\t\t}\n\n\t\t\t// Placeholders.\n\t\t\tif ( typeof fieldLocale.placeholder !== 'undefined' ) {\n\t\t\t\tfield.find( ':input' ).attr( 'placeholder', fieldLocale.placeholder );\n\t\t\t\tfield.find( ':input' ).attr( 'data-placeholder', fieldLocale.placeholder );\n\t\t\t\tfield.find( '.select2-selection__placeholder' ).text( fieldLocale.placeholder );\n\t\t\t}\n\n\t\t\t// Use the i18n label as a placeholder if there is no label element and no i18n placeholder.\n\t\t\tif (\n\t\t\t\ttypeof fieldLocale.placeholder === 'undefined' &&\n\t\t\t\ttypeof fieldLocale.label !== 'undefined' &&\n\t\t\t\t! field.find( 'label' ).length\n\t\t\t) {\n\t\t\t\tfield.find( ':input' ).attr( 'placeholder', fieldLocale.label );\n\t\t\t\tfield.find( ':input' ).attr( 'data-placeholder', fieldLocale.label );\n\t\t\t\tfield.find( '.select2-selection__placeholder' ).text( fieldLocale.label );\n\t\t\t}\n\n\t\t\t// Required.\n\t\t\tif ( typeof fieldLocale.required !== 'undefined' ) {\n\t\t\t\tfield_is_required( field, fieldLocale.required );\n\t\t\t} else {\n\t\t\t\tfield_is_required( field, false );\n\t\t\t}\n\n\t\t\t// Priority.\n\t\t\tif ( typeof fieldLocale.priority !== 'undefined' ) {\n\t\t\t\tfield.data( 'priority', fieldLocale.priority );\n\t\t\t}\n\n\t\t\t// Hidden fields.\n\t\t\tif ( 'state' !== key ) {\n\t\t\t\tif ( typeof fieldLocale.hidden !== 'undefined' && true === fieldLocale.hidden ) {\n\t\t\t\t\tfield.hide().find( ':input' ).val( '' );\n\t\t\t\t} else {\n\t\t\t\t\tfield.show();\n\t\t\t\t}\n\n\t\t\t\t// CHANGE: Handle collapsible fields state when field is hidden\n\t\t\t\tif ( true === fieldLocale.hidden && ( typeof fieldLocale.required === 'undefined' || false === fieldLocale.required ) ) {\n\t\t\t\t\tvar formRow, fieldCollapsibleToggle, fieldCollapsibleContent;\n\t\t\t\t\tif ( window.CollapsibleBlock && field.length > 0 ) {\n\t\t\t\t\t\tformRow = field[0].closest( _settings.formRowExpansibleSelector );\n\t\t\t\t\t\tif ( formRow ) {\n\t\t\t\t\t\t\tfieldCollapsibleToggle = formRow.querySelector( _settings.expansibleToggleSelector );\n\t\t\t\t\t\t\tfieldCollapsibleContent = formRow.querySelector( _settings.expansibleContentSelector );\n\n\t\t\t\t\t\t\tCollapsibleBlock.collapse( fieldCollapsibleToggle, false ); // Collapse without transitions\n\t\t\t\t\t\t\tCollapsibleBlock.expand( fieldCollapsibleContent, false, false ); // Expand without transitions and without setting focus\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// CHANGE: END - Handle collapsible fields state when field is hidden\n\t\t\t}\n\n\t\t\t// Class changes.\n\t\t\tif ( Array.isArray( fieldLocale.class ) ) {\n\t\t\t\tfield.removeClass( 'form-row-first form-row-last form-row-wide' );\n\t\t\t\tfield.addClass( fieldLocale.class.join( ' ' ) );\n\t\t\t}\n\t\t});\n\n\t\tvar fieldsets = $(\n\t\t\t'.woocommerce-billing-fields__field-wrapper,' +\n\t\t\t'.woocommerce-shipping-fields__field-wrapper,' +\n\t\t\t'.woocommerce-address-fields__field-wrapper,' +\n\t\t\t'.woocommerce-additional-fields__field-wrapper .woocommerce-account-fields'\n\t\t);\n\n\t\tfieldsets.each( function( index, fieldset ) {\n\t\t\t// CHANGE: Change form row selector to exclude nested `.form-row` elements (used for expansible form fields)\n\t\t\tvar rows    = $( fieldset ).find( '.form-row:not( .form-row .form-row )' );\n\t\t\tvar wrapper = rows.first().parent();\n\n\t\t\t// Before sorting, ensure all fields have a priority for bW compatibility.\n\t\t\tvar last_priority = 0;\n\n\t\t\trows.each( function() {\n\t\t\t\tif ( ! $( this ).data( 'priority' ) ) {\n\t\t\t\t\t\t$( this ).data( 'priority', last_priority + 1 );\n\t\t\t\t}\n\t\t\t\tlast_priority = $( this ).data( 'priority' );\n\t\t\t} );\n\n\t\t\t// Sort the fields.\n\t\t\trows.sort( function( a, b ) {\n\t\t\t\tvar asort = parseInt( $( a ).data( 'priority' ), 10 ),\n\t\t\t\t\tbsort = parseInt( $( b ).data( 'priority' ), 10 );\n\n\t\t\t\tif ( asort > bsort ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif ( asort < bsort ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\trows.detach().appendTo( wrapper );\n\t\t});\n\t};\n\n\t// CHANGE: END - Extract function to process country to state changing as it needs to be used when event `updated_checkout` is triggered\n\t// CHANGE: Add function to handle country to state changing when event `updated_checkout` is triggered\n\tvar process_country_to_state_changing_updated_checkout = function() {\n\t\trequestAnimationFrame( function() {\n\t\t\tvar country_fields = document.querySelectorAll( _settings.countryFieldsSelector );\n\n\t\t\tif ( country_fields.length > 0 ) {\n\t\t\t\tfor ( var i = 0; i < country_fields.length; i++ ) {\n\t\t\t\t\tvar field = country_fields[i];\n\t\t\t\t\tvar wrapper = field.closest( _settings.addressFieldGroupSelector );\n\t\t\t\t\tprocess_country_to_state_changing( null, field.value, $( wrapper ) );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t// CHANGE: END - Add function to handle country to state changing when event `updated_checkout` is triggered\n\t$( document.body )\n\t\t// CHANGE: Use extracted function to process country to state changing\n\t\t.on( 'country_to_state_changing', process_country_to_state_changing )\n\t\t// CHANGE: Use extracted function to process country to state changing when event `updated_checkout` is triggered\n\t\t.on( 'updated_checkout', process_country_to_state_changing_updated_checkout )\n\t\t.trigger( 'wc_address_i18n_ready' );\n});\n"],"names":["jQuery","$","wc_address_i18n_params","_settings","formRowExpansibleSelector","expansibleToggleSelector","expansibleContentSelector","inputSelector","countryFieldsSelector","addressFieldGroupSelector","locale_json","locale","replace","JSON","parse","field_is_required","field","is_required","fieldCollapsibleToggle","fieldCollapsibleContent","input","window","CollapsibleBlock","length","formRow","closest","querySelector","find","remove","addClass","append","i18n_required_text","removeClass","i18n_optional_text","value","process_country_to_state_changing","event","country","wrapper","thisform","thislocale","$postcodefield","$cityfield","$statefield","locale_fields","attr","each","key","fieldLocale","extend","label","html","placeholder","text","required","priority","data","hidden","hide","val","show","collapse","expand","Array","isArray","class","join","index","fieldset","rows","first","parent","last_priority","this","sort","a","b","asort","parseInt","bsort","detach","appendTo","document","body","on","requestAnimationFrame","country_fields","querySelectorAll","i","trigger"],"mappings":"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"}