{"version":3,"file":"../tom-select.complete-318.min.js","sources":["tom-select.complete-318.js"],"sourcesContent":["/**\n* Tom Select v2.3.1\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = void 0;\n\t    this._events = {};\n\t  }\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      const event_array = this._events[event] || [];\n\t      event_array.push(fct);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\t    forEvents(events, event => {\n\t      if (n === 1) {\n\t        delete this._events[event];\n\t        return;\n\t      }\n\t      const event_array = this._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.splice(event_array.indexOf(fct), 1);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      const event_array = self._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.forEach(fct => {\n\t        fct.apply(self, args);\n\t      });\n\t    });\n\t  }\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\t        self.loadPlugin(name);\n\t      }\n\t      return plugins.loaded[name];\n\t    }\n\t  };\n\t}\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {string[]} chars\n\t * @return {string}\n\t */\n\tconst arrayToPattern = chars => {\n\t  chars = chars.filter(Boolean);\n\n\t  if (chars.length < 2) {\n\t    return chars[0] || '';\n\t  }\n\n\t  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n\t};\n\t/**\n\t * @param {string[]} array\n\t * @return {string}\n\t */\n\n\tconst sequencePattern = array => {\n\t  if (!hasDuplicates(array)) {\n\t    return array.join('');\n\t  }\n\n\t  let pattern = '';\n\t  let prev_char_count = 0;\n\n\t  const prev_pattern = () => {\n\t    if (prev_char_count > 1) {\n\t      pattern += '{' + prev_char_count + '}';\n\t    }\n\t  };\n\n\t  array.forEach((char, i) => {\n\t    if (char === array[i - 1]) {\n\t      prev_char_count++;\n\t      return;\n\t    }\n\n\t    prev_pattern();\n\t    pattern += char;\n\t    prev_char_count = 1;\n\t  });\n\t  prev_pattern();\n\t  return pattern;\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {Set<string>} chars\n\t * @return {string}\n\t */\n\n\tconst setToPattern = chars => {\n\t  let array = toArray(chars);\n\t  return arrayToPattern(array);\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n\t * @param {any[]} array\n\t */\n\n\tconst hasDuplicates = array => {\n\t  return new Set(array).size !== array.length;\n\t};\n\t/**\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n\t};\n\t/**\n\t * Return the max length of array values\n\t * @param {string[]} array\n\t *\n\t */\n\n\tconst maxValueLength = array => {\n\t  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n\t};\n\t/**\n\t * @param {string} str\n\t */\n\n\tconst unicodeLength = str => {\n\t  return toArray(str).length;\n\t};\n\t/**\n\t * @param {any} p\n\t * @return {any[]}\n\t */\n\n\tconst toArray = p => Array.from(p);\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t * @param {string} input\n\t * @return {string[][]}\n\t */\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  /** @type {string[][]} */\n\n\t  let result = [];\n\t  const start = input.substring(1);\n\t  const suba = allSubstrings(start);\n\t  suba.forEach(function (subresult) {\n\t    let tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n\t/**\n\t * @typedef {{[key:string]:string}} TUnicodeMap\n\t * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n\t * @typedef {[[number,number]]} TCodePoints\n\t * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n\t * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n\t */\n\t/** @type {TCodePoints} */\n\n\tconst code_points = [[0, 65535]];\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\t/** @type {TUnicodeMap} */\n\n\tlet unicode_map;\n\t/** @type {RegExp} */\n\n\tlet multi_char_reg;\n\tconst max_char_length = 3;\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_convert = {};\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_condensed = {\n\t  '/': '⁄∕',\n\t  '0': '߀',\n\t  \"a\": \"ⱥɐɑ\",\n\t  \"aa\": \"ꜳ\",\n\t  \"ae\": \"æǽǣ\",\n\t  \"ao\": \"ꜵ\",\n\t  \"au\": \"ꜷ\",\n\t  \"av\": \"ꜹꜻ\",\n\t  \"ay\": \"ꜽ\",\n\t  \"b\": \"ƀɓƃ\",\n\t  \"c\": \"ꜿƈȼↄ\",\n\t  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t  \"e\": \"ɛǝᴇɇ\",\n\t  \"f\": \"ꝼƒ\",\n\t  \"g\": \"ǥɠꞡᵹꝿɢ\",\n\t  \"h\": \"ħⱨⱶɥ\",\n\t  \"i\": \"ɨı\",\n\t  \"j\": \"ɉȷ\",\n\t  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t  \"m\": \"ɱɯϻ\",\n\t  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t  \"o\": \"øǿɔɵꝋꝍᴑ\",\n\t  \"oe\": \"œ\",\n\t  \"oi\": \"ƣ\",\n\t  \"oo\": \"ꝏ\",\n\t  \"ou\": \"ȣ\",\n\t  \"p\": \"ƥᵽꝑꝓꝕρ\",\n\t  \"q\": \"ꝗꝙɋ\",\n\t  \"r\": \"ɍɽꝛꞧꞃ\",\n\t  \"s\": \"ßȿꞩꞅʂ\",\n\t  \"t\": \"ŧƭʈⱦꞇ\",\n\t  \"th\": \"þ\",\n\t  \"tz\": \"ꜩ\",\n\t  \"u\": \"ʉ\",\n\t  \"v\": \"ʋꝟʌ\",\n\t  \"vy\": \"ꝡ\",\n\t  \"w\": \"ⱳ\",\n\t  \"y\": \"ƴɏỿ\",\n\t  \"z\": \"ƶȥɀⱬꝣ\",\n\t  \"hv\": \"ƕ\"\n\t};\n\n\tfor (let latin in latin_condensed) {\n\t  let unicode = latin_condensed[latin] || '';\n\n\t  for (let i = 0; i < unicode.length; i++) {\n\t    let char = unicode.substring(i, i + 1);\n\t    latin_convert[char] = latin;\n\t  }\n\t}\n\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n\t/**\n\t * Initialize the unicode_map from the give code point ranges\n\t *\n\t * @param {TCodePoints=} _code_points\n\t */\n\n\tconst initialize = _code_points => {\n\t  if (unicode_map !== undefined) return;\n\t  unicode_map = generateMap(_code_points || code_points);\n\t};\n\t/**\n\t * Helper method for normalize a string\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n\t * @param {string} str\n\t * @param {string} form\n\t */\n\n\tconst normalize = (str, form = 'NFKD') => str.normalize(form);\n\t/**\n\t * Remove accents without reordering string\n\t * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst asciifold = str => {\n\t  return toArray(str).reduce(\n\t  /**\n\t   * @param {string} result\n\t   * @param {string} char\n\t   */\n\t  (result, char) => {\n\t    return result + _asciifold(char);\n\t  }, '');\n\t};\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst _asciifold = str => {\n\t  str = normalize(str).toLowerCase().replace(convert_pat, (\n\t  /** @type {string} */\n\t  char) => {\n\t    return latin_convert[char] || '';\n\t  }); //return str;\n\n\t  return normalize(str, 'NFC');\n\t};\n\t/**\n\t * Generate a list of unicode variants from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @yield {TCodePointObj}\n\t */\n\n\tfunction* generator(code_points) {\n\t  for (const [code_point_min, code_point_max] of code_points) {\n\t    for (let i = code_point_min; i <= code_point_max; i++) {\n\t      let composed = String.fromCharCode(i);\n\t      let folded = asciifold(composed);\n\n\t      if (folded == composed.toLowerCase()) {\n\t        continue;\n\t      } // skip when folded is a string longer than 3 characters long\n\t      // bc the resulting regex patterns will be long\n\t      // eg:\n\t      // folded صلى الله عليه وسلم length 18 code point 65018\n\t      // folded جل جلاله length 8 code point 65019\n\n\n\t      if (folded.length > max_char_length) {\n\t        continue;\n\t      }\n\n\t      if (folded.length == 0) {\n\t        continue;\n\t      }\n\n\t      yield {\n\t        folded: folded,\n\t        composed: composed,\n\t        code_point: i\n\t      };\n\t    }\n\t  }\n\t}\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeSets}\n\t */\n\n\tconst generateSets = code_points => {\n\t  /** @type {{[key:string]:Set<string>}} */\n\t  const unicode_sets = {};\n\t  /**\n\t   * @param {string} folded\n\t   * @param {string} to_add\n\t   */\n\n\t  const addMatching = (folded, to_add) => {\n\t    /** @type {Set<string>} */\n\t    const folded_set = unicode_sets[folded] || new Set();\n\t    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n\t    if (to_add.match(patt)) {\n\t      return;\n\t    }\n\n\t    folded_set.add(escape_regex(to_add));\n\t    unicode_sets[folded] = folded_set;\n\t  };\n\n\t  for (let value of generator(code_points)) {\n\t    addMatching(value.folded, value.folded);\n\t    addMatching(value.folded, value.composed);\n\t  }\n\n\t  return unicode_sets;\n\t};\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\t *\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeMap}\n\t */\n\n\tconst generateMap = code_points => {\n\t  /** @type {TUnicodeSets} */\n\t  const unicode_sets = generateSets(code_points);\n\t  /** @type {TUnicodeMap} */\n\n\t  const unicode_map = {};\n\t  /** @type {string[]} */\n\n\t  let multi_char = [];\n\n\t  for (let folded in unicode_sets) {\n\t    let set = unicode_sets[folded];\n\n\t    if (set) {\n\t      unicode_map[folded] = setToPattern(set);\n\t    }\n\n\t    if (folded.length > 1) {\n\t      multi_char.push(escape_regex(folded));\n\t    }\n\t  }\n\n\t  multi_char.sort((a, b) => b.length - a.length);\n\t  const multi_char_patt = arrayToPattern(multi_char);\n\t  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n\t  return unicode_map;\n\t};\n\t/**\n\t * Map each element of an array from it's folded value to all possible unicode matches\n\t * @param {string[]} strings\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst mapSequence = (strings, min_replacement = 1) => {\n\t  let chars_replaced = 0;\n\t  strings = strings.map(str => {\n\t    if (unicode_map[str]) {\n\t      chars_replaced += str.length;\n\t    }\n\n\t    return unicode_map[str] || str;\n\t  });\n\n\t  if (chars_replaced >= min_replacement) {\n\t    return sequencePattern(strings);\n\t  }\n\n\t  return '';\n\t};\n\t/**\n\t * Convert a short string and split it into all possible patterns\n\t * Keep a pattern only if min_replacement is met\n\t *\n\t * 'abc'\n\t * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n\t *\t\t=> ['abc-pattern','ab-c-pattern'...]\n\t *\n\t *\n\t * @param {string} str\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst substringsToPattern = (str, min_replacement = 1) => {\n\t  min_replacement = Math.max(min_replacement, str.length - 1);\n\t  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n\t    return mapSequence(sub_pat, min_replacement);\n\t  }));\n\t};\n\t/**\n\t * Convert an array of sequences into a pattern\n\t * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n\t *\n\t * @param {Sequence[]} sequences\n\t * @param {boolean} all\n\t */\n\n\tconst sequencesToPattern = (sequences, all = true) => {\n\t  let min_replacement = sequences.length > 1 ? 1 : 0;\n\t  return arrayToPattern(sequences.map(sequence => {\n\t    let seq = [];\n\t    const len = all ? sequence.length() : sequence.length() - 1;\n\n\t    for (let j = 0; j < len; j++) {\n\t      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n\t    }\n\n\t    return sequencePattern(seq);\n\t  }));\n\t};\n\t/**\n\t * Return true if the sequence is already in the sequences\n\t * @param {Sequence} needle_seq\n\t * @param {Sequence[]} sequences\n\t */\n\n\n\tconst inSequences = (needle_seq, sequences) => {\n\t  for (const seq of sequences) {\n\t    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n\t      continue;\n\t    }\n\n\t    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n\t      continue;\n\t    }\n\n\t    let needle_parts = needle_seq.parts;\n\t    /**\n\t     * @param {TSequencePart} part\n\t     */\n\n\t    const filter = part => {\n\t      for (const needle_part of needle_parts) {\n\t        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n\t          return false;\n\t        }\n\n\t        if (part.length == 1 || needle_part.length == 1) {\n\t          continue;\n\t        } // check for overlapping parts\n\t        // a = ['::=','==']\n\t        // b = ['::','===']\n\t        // a = ['r','sm']\n\t        // b = ['rs','m']\n\n\n\t        if (part.start < needle_part.start && part.end > needle_part.start) {\n\t          return true;\n\t        }\n\n\t        if (needle_part.start < part.start && needle_part.end > part.start) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\n\t    let filtered = seq.parts.filter(filter);\n\n\t    if (filtered.length > 0) {\n\t      continue;\n\t    }\n\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\n\tclass Sequence {\n\t  constructor() {\n\t    /** @type {TSequencePart[]} */\n\t    this.parts = [];\n\t    /** @type {string[]} */\n\n\t    this.substrs = [];\n\t    this.start = 0;\n\t    this.end = 0;\n\t  }\n\t  /**\n\t   * @param {TSequencePart|undefined} part\n\t   */\n\n\n\t  add(part) {\n\t    if (part) {\n\t      this.parts.push(part);\n\t      this.substrs.push(part.substr);\n\t      this.start = Math.min(part.start, this.start);\n\t      this.end = Math.max(part.end, this.end);\n\t    }\n\t  }\n\n\t  last() {\n\t    return this.parts[this.parts.length - 1];\n\t  }\n\n\t  length() {\n\t    return this.parts.length;\n\t  }\n\t  /**\n\t   * @param {number} position\n\t   * @param {TSequencePart} last_piece\n\t   */\n\n\n\t  clone(position, last_piece) {\n\t    let clone = new Sequence();\n\t    let parts = JSON.parse(JSON.stringify(this.parts));\n\t    let last_part = parts.pop();\n\n\t    for (const part of parts) {\n\t      clone.add(part);\n\t    }\n\n\t    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n\t    let clone_last_len = last_substr.length;\n\t    clone.add({\n\t      start: last_part.start,\n\t      end: last_part.start + clone_last_len,\n\t      length: clone_last_len,\n\t      substr: last_substr\n\t    });\n\t    return clone;\n\t  }\n\n\t}\n\t/**\n\t * Expand a regular expression pattern to include unicode variants\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t * Issue:\n\t *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n\t *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n\t *\n\t *\tİĲ = IIJ = ⅡJ\n\t *\n\t * \t1/2/4\n\t *\n\t * @param {string} str\n\t * @return {string|undefined}\n\t */\n\n\n\tconst getPattern = str => {\n\t  initialize();\n\t  str = asciifold(str);\n\t  let pattern = '';\n\t  let sequences = [new Sequence()];\n\n\t  for (let i = 0; i < str.length; i++) {\n\t    let substr = str.substring(i);\n\t    let match = substr.match(multi_char_reg);\n\t    const char = str.substring(i, i + 1);\n\t    const match_str = match ? match[0] : null; // loop through sequences\n\t    // add either the char or multi_match\n\n\t    let overlapping = [];\n\t    let added_types = new Set();\n\n\t    for (const sequence of sequences) {\n\t      const last_piece = sequence.last();\n\n\t      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n\t        // if we have a multi match\n\t        if (match_str) {\n\t          const len = match_str.length;\n\t          sequence.add({\n\t            start: i,\n\t            end: i + len,\n\t            length: len,\n\t            substr: match_str\n\t          });\n\t          added_types.add('1');\n\t        } else {\n\t          sequence.add({\n\t            start: i,\n\t            end: i + 1,\n\t            length: 1,\n\t            substr: char\n\t          });\n\t          added_types.add('2');\n\t        }\n\t      } else if (match_str) {\n\t        let clone = sequence.clone(i, last_piece);\n\t        const len = match_str.length;\n\t        clone.add({\n\t          start: i,\n\t          end: i + len,\n\t          length: len,\n\t          substr: match_str\n\t        });\n\t        overlapping.push(clone);\n\t      } else {\n\t        // don't add char\n\t        // adding would create invalid patterns: 234 => [2,34,4]\n\t        added_types.add('3');\n\t      }\n\t    } // if we have overlapping\n\n\n\t    if (overlapping.length > 0) {\n\t      // ['ii','iii'] before ['i','i','iii']\n\t      overlapping = overlapping.sort((a, b) => {\n\t        return a.length() - b.length();\n\t      });\n\n\t      for (let clone of overlapping) {\n\t        // don't add if we already have an equivalent sequence\n\t        if (inSequences(clone, sequences)) {\n\t          continue;\n\t        }\n\n\t        sequences.push(clone);\n\t      }\n\n\t      continue;\n\t    } // if we haven't done anything unique\n\t    // clean up the patterns\n\t    // helps keep patterns smaller\n\t    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n\t    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n\t      pattern += sequencesToPattern(sequences, false);\n\t      let new_seq = new Sequence();\n\t      const old_seq = sequences[0];\n\n\t      if (old_seq) {\n\t        new_seq.add(old_seq.last());\n\t      }\n\n\t      sequences = [new_seq];\n\t    }\n\t  }\n\n\t  pattern += sequencesToPattern(sequences, true);\n\t  return pattern;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  if (token.regex == null) return 0;\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate$1 = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        if (this.settings.diacritics) {\n\t          regex = getPattern(word) || null;\n\t        } else {\n\t          regex = escape_regex(word);\n\t        }\n\n\t        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {T.ScoreFn}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\t  /**\n\t   * @returns {T.ScoreFn}\n\t   *\n\t   */\n\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate$1(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var score,\n\t            sum = 0;\n\n\t        for (let token of tokens) {\n\t          score = scoreObject(token, data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate$1(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var implicit_score,\n\t        sort_flds = [];\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (let s of sort) {\n\t        if (search.query || s.field !== '$score') {\n\t          sort_flds.push(s);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (let fld of sort_flds) {\n\t        if (fld.field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      } // without a search.query, all items will have the same score\n\n\t    } else {\n\t      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    }\n\n\t    return function (a, b) {\n\t      var result, field;\n\n\t      for (let sort_fld of sort_flds) {\n\t        field = sort_fld.field;\n\t        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\t        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n\t        if (result) return result;\n\t      }\n\n\t      return 0;\n\t    };\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate$1(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate$1(self.items, (_, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\t  if (isHtmlString(query)) {\n\t    var tpl = document.createElement('template');\n\t    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t    return tpl.content.firstChild;\n\t  }\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\n\t/**\n\t * Add css classes\n\t *\n\t */\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\n\t/**\n\t * Return arguments\n\t *\n\t */\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\t  return arg;\n\t};\n\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\t    target = target.parentNode;\n\t  }\n\t};\n\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\t  return list[0];\n\t};\n\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\t  return i;\n\t};\n\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\n\t/**\n\t * Replace a node\n\t */\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return;\n\n\t  // convet string to regex\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  }\n\n\t  // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\t    return 0;\n\t  };\n\n\t  // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      Array.from(node.childNodes).forEach(element => {\n\t        highlightRecursive(element);\n\t      });\n\t    }\n\t  };\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\t  highlightRecursive(element);\n\t};\n\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  refreshThrottle: 300,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\n\t/**\n\t * use setTimeout if timeout > 0 \n\t */\n\tconst timeout = (fn, timeout) => {\n\t  if (timeout > 0) {\n\t    return setTimeout(fn, timeout);\n\t  }\n\t  fn.call(null);\n\t  return null;\n\t};\n\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {};\n\n\t  // override trigger method\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  };\n\n\t  // invoke provided function\n\t  fn.apply(self, []);\n\t  self.trigger = trigger;\n\n\t  // trigger queued events\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n\t * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n\t */\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\n\t/**\n\t * Prevent default\n\t *\n\t */\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Add event helper\n\t *\n\t */\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\n\t/**\n\t *\n\t */\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\t    let $order = 0;\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\t      var json = attr_data && data[attr_data];\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\t      return data;\n\t    };\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return;\n\n\t      // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        option_data.$order = option_data.$order || ++$order;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      optgroup_data.$order = optgroup_data.$order || ++$order;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.focus_node = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isReadOnly = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    // @deprecated 1.8\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.ignoreHover = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = void 0;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    this.refreshTimeout = null;\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\t    input.tomselect = this;\n\n\t    // detect rtl environment\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction');\n\n\t    // setup default state\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required;\n\n\t    // search system\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    });\n\n\t    // option-dependent defaults\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    }\n\n\t    // set up createFilter callback\n\t    var filter = settings.createFilter;\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = value => {\n\t          return this.settings.duplicates || !this.options[value];\n\t        };\n\t      }\n\t    }\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates();\n\n\t    // Create all elements\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\t    const dropdown = this._render('dropdown');\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n\t    // default controlInput\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput);\n\n\t      // set attributes\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n\t      iterate$1(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input;\n\n\t      // dom element\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\t    wrapper.style.width = input.style.width;\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\t    if (settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    }\n\n\t    // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t    if (!settings.splitOn && settings.delimiter) {\n\t      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t    }\n\n\t    // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\t    addEvent(dropdown, 'mousemove', () => {\n\t      self.ignoreHover = false;\n\t    });\n\t    addEvent(dropdown, 'mouseenter', e => {\n\t      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n\t      if (target_match) self.onOptionHover(e, target_match);\n\t    }, {\n\t      capture: true\n\t    });\n\n\t    // clicking on an option should select it\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      }\n\n\t      // retain focus (see control_input mousedown)\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    });\n\n\t    // keydown on focus_node for arrow_down/arrow_up\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e));\n\n\t    // keypress and input/keyup\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\t        self.inputState();\n\t        return;\n\t      }\n\n\t      // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation();\n\n\t        // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\t    const win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('scroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    };\n\n\t    // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', () => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else if (input.readOnly) {\n\t      self.setReadOnly(true);\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize');\n\n\t    // preload options\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options);\n\n\t    // build optgroup table\n\t    iterate$1(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items || [], true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\t  onClick() {\n\t    var self = this;\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\t  onMouseDown() {}\n\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\t  onPaste(e) {\n\t    var self = this;\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\t    if (!self.settings.splitOn) {\n\t      return;\n\t    }\n\n\t    // Wait for pasted text to be recognized in value\n\t    setTimeout(() => {\n\t      var pastedText = self.inputValue();\n\t      if (!pastedText.match(self.settings.splitOn)) {\n\t        return;\n\t      }\n\t      var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t      iterate$1(splitInput, piece => {\n\t        const hash = hash_key(piece);\n\t        if (hash) {\n\t          if (this.options[piece]) {\n\t            self.addItem(piece);\n\t          } else {\n\t            self.createItem(piece);\n\t          }\n\t        }\n\t      });\n\t    }, 0);\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\t  onKeyPress(e) {\n\t    var self = this;\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\t  onKeyDown(e) {\n\t    var self = this;\n\t    self.ignoreHover = true;\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\t      return;\n\t    }\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\t        break;\n\n\t      // esc: close dropdown\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\t        self.clearActiveItems();\n\t        return;\n\n\t      // down: open dropdown or move selection down\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\t        preventDefault(e);\n\t        return;\n\n\t      // up: move selection up\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\t        preventDefault(e);\n\t        return;\n\n\t      // return: select active option\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e);\n\n\t          // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e);\n\n\t          // don't submit form when searching for a value\n\t        } else if (document.activeElement == self.control_input && self.isOpen) {\n\t          preventDefault(e);\n\t        }\n\t        return;\n\n\t      // left: modifiy item selection to the left\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\n\t      // right: modifiy item selection to the right\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\n\t      // tab: select active option and/or create item\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption);\n\n\t            // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\t            preventDefault(e);\n\t          }\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\t        return;\n\n\t      // delete|backspace: delete items\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    }\n\n\t    // don't enter text in the control_input when active items are selected\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\t  onInput(e) {\n\t    if (this.isLocked) {\n\t      return;\n\t    }\n\t    const value = this.inputValue();\n\t    if (this.lastValue === value) return;\n\t    this.lastValue = value;\n\t    if (value == '') {\n\t      this._onInput();\n\t      return;\n\t    }\n\t    if (this.refreshTimeout) {\n\t      clearTimeout(this.refreshTimeout);\n\t    }\n\t    this.refreshTimeout = timeout(() => {\n\t      this.refreshTimeout = null;\n\t      this._onInput();\n\t    }, this.settings.refreshThrottle);\n\t  }\n\t  _onInput() {\n\t    const value = this.lastValue;\n\t    if (this.settings.shouldLoad.call(this, value)) {\n\t      this.load(value);\n\t    }\n\t    this.refreshOptions();\n\t    this.trigger('type', value);\n\t  }\n\n\t  /**\n\t   * Triggered when the user rolls over\n\t   * an option in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  onOptionHover(evt, option) {\n\t    if (this.ignoreHover) return;\n\t    this.setActiveOption(option, false);\n\t  }\n\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\t    if (self.isDisabled || self.isReadOnly) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\t    if (!self.activeItems.length) {\n\t      self.inputState();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\t    self.refreshState();\n\t  }\n\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t      self = this;\n\n\t    // should not be possible to trigger a option under a disabled optgroup\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\t    self.trigger('load', options, optgroups);\n\t  }\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return;\n\n\t    // clear the active selection\n\t    if (!item) {\n\t      self.clearActiveItems();\n\t      if (self.isFocused) {\n\t        self.inputState();\n\t      }\n\t      return;\n\t    }\n\n\t    // modify selection\n\t    eventName = e && e.type.toLowerCase();\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    }\n\n\t    // ensure control has focus\n\t    self.inputState();\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\t  setActiveOption(option, scroll = true) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    if (scroll) this.scrollToOption(option);\n\t  }\n\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\t  selectAll() {\n\t    const self = this;\n\t    if (self.settings.mode === 'single') return;\n\t    const activeItems = self.controlChildren();\n\t    if (!activeItems.length) return;\n\t    self.inputState();\n\t    self.close();\n\t    self.activeItems = activeItems;\n\t    iterate$1(activeItems, item => {\n\t      self.setActiveItemClass(item);\n\t    });\n\t  }\n\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\t      self.isInputHidden = false;\n\t    }\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\n\t  /**\n\t   * Get the input value\n\t   */\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled || self.isReadOnly) return;\n\t    self.ignoreFocus = true;\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\t  search(query) {\n\t    var result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions();\n\n\t    // validate user-provided result scoring function\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    }\n\n\t    // perform search\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    }\n\n\t    // filter out selected items\n\t    if (self.settings.hideSelected) {\n\t      result.items = result.items.filter(item => {\n\t        let hashed = hash_key(item.id);\n\t        return !(hashed && self.items.indexOf(hashed) !== -1);\n\t      });\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n\t    var results = self.search(query);\n\t    var active_option = null;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\t    if (same_query) {\n\t      active_option = self.activeOption;\n\t      if (active_option) {\n\t        active_group = active_option.closest('[data-group]');\n\t      }\n\t    }\n\n\t    // build markup\n\t    n = results.items.length;\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    }\n\n\t    // get fragment for group and the position of the group in group_order\n\t    const getGroupFragment = (optgroup, order) => {\n\t      let group_order_i = groups[optgroup];\n\t      if (group_order_i !== undefined) {\n\t        let order_group = groups_order[group_order_i];\n\t        if (order_group !== undefined) {\n\t          return [group_order_i, order_group.fragment];\n\t        }\n\t      }\n\t      let group_fragment = document.createDocumentFragment();\n\t      group_order_i = groups_order.length;\n\t      groups_order.push({\n\t        fragment: group_fragment,\n\t        order,\n\t        optgroup\n\t      });\n\t      return [group_order_i, group_fragment];\n\t    };\n\n\t    // render and group available options individually\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let item = results.items[i];\n\t      if (!item) continue;\n\t      let opt_value = item.id;\n\t      let option = self.options[opt_value];\n\t      if (option === undefined) continue;\n\t      let opt_hash = get_hash(opt_value);\n\t      let option_el = self.getOption(opt_hash, true);\n\n\t      // toggle 'selected' class\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n\t      }\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\t        let order = option.$order;\n\t        let self_optgroup = self.optgroups[optgroup];\n\t        if (self_optgroup === undefined) {\n\t          optgroup = '';\n\t        } else {\n\t          order = self_optgroup.$order;\n\t        }\n\t        const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);\n\n\t        // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active');\n\n\t          // make sure we keep the activeOption in the same group\n\t          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n\t            if (active_group && active_group.dataset.group === optgroup.toString()) {\n\t              active_option = option_el;\n\t            }\n\t          }\n\t        }\n\t        group_fragment.appendChild(option_el);\n\t        if (optgroup != '') {\n\t          groups[optgroup] = group_order_i;\n\t        }\n\t      }\n\t    }\n\n\t    // sort optgroups\n\t    if (self.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        return a.order - b.order;\n\t      });\n\t    }\n\n\t    // render optgroup headers & join groups\n\t    html = document.createDocumentFragment();\n\t    iterate$1(groups_order, group_order => {\n\t      let group_fragment = group_order.fragment;\n\t      let optgroup = group_order.optgroup;\n\t      if (!group_fragment || !group_fragment.children.length) return;\n\t      let group_heading = self.optgroups[optgroup];\n\t      if (group_heading !== undefined) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', group_heading);\n\t        append(group_options, header);\n\t        append(group_options, group_fragment);\n\t        let group_html = self.render('optgroup', {\n\t          group: group_heading,\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, group_fragment);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html);\n\n\t    // highlight matching terms inline\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate$1(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    }\n\n\t    // helper method for adding templates to dropdown\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\t      return content;\n\t    };\n\n\t    // add loading message\n\t    if (self.loading) {\n\t      add_template('loading');\n\n\t      // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading');\n\n\t      // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    }\n\n\t    // add create option\n\t    has_create_option = self.canCreate(query);\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    }\n\n\t    // activate\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\t  addOption(data, user_created = false) {\n\t    const self = this;\n\n\t    // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\t    const key = hash_key(data[self.settings.valueField]);\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\t    return key;\n\t  }\n\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\t  addOptions(data, user_created = false) {\n\t    iterate$1(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]);\n\n\t    // sanity checks\n\t    if (value_old === null) return;\n\t    const data_old = self.options[value_old];\n\t    if (data_old == undefined) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || data_old.$order;\n\t    delete self.options[value_old];\n\n\t    // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data;\n\n\t    // update the option if it's in the dropdown\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\t        replaceNode(option, option_new);\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\t      option.remove();\n\t    }\n\n\t    // update the item if we have one\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    }\n\n\t    // invalidate last query because we might have updated the sortField\n\t    self.lastQuery = null;\n\t  }\n\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\n\t  /**\n\t   * Clears all options.\n\t   */\n\t  clearOptions(filter) {\n\t    const boundFilter = (filter || this.clearFilter).bind(this);\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    const selected = {};\n\t    iterate$1(this.options, (option, key) => {\n\t      if (boundFilter(option, key)) {\n\t        selected[key] = option;\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\n\t  /**\n\t   * Used by clearOptions() to decide whether or not an option should be removed\n\t   * Return true to keep an option, false to remove\n\t   *\n\t   */\n\t  clearFilter(option, value) {\n\t    if (this.items.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\t    if (hashed === null) return null;\n\t    const option = this.options[hashed];\n\t    if (option != undefined) {\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\t    return null;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t      all;\n\t    if (!option) {\n\t      return null;\n\t    }\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\t      return all[i - 1];\n\t    }\n\t    return null;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\t    const last_item = items[items.length - 1];\n\t    items.forEach(item => {\n\t      self.isPending = item !== last_item;\n\t      self.addItem(item, silent);\n\t    });\n\t  }\n\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        }\n\n\t        // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        }\n\n\t        // hide the menu if the maximum number of items have been selected or no options are left\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\t        self.trigger('item_add', hashed, item);\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\t  createItem(input = null, callback = () => {}) {\n\t    // triggerDropdown parameter @deprecated 2.1.1\n\t    if (arguments.length === 3) {\n\t      callback = arguments[2];\n\t    }\n\t    if (typeof callback != 'function') {\n\t      callback = () => {};\n\t    }\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\t    self.lock();\n\t    var created = false;\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\t    if (!created) {\n\t      create(output);\n\t    }\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('readonly', self.isReadOnly);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\t  refreshValidityState() {\n\t    var self = this;\n\t    if (!self.input.validity) {\n\t      return;\n\t    }\n\t    self.isValid = self.input.validity.valid;\n\t    self.isInvalid = !self.isValid;\n\t  }\n\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\t      const has_selected = self.input.querySelectorAll('option:checked').length;\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        }\n\n\t        // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\t        selected.push(option_el);\n\n\t        // marking empty option as selected can break validation\n\t        // fixes https://github.com/orchidjs/tom-select/issues/303\n\t        if (option_el != empty_option || has_selected > 0) {\n\t          option_el.selected = true;\n\t        }\n\t        return option_el;\n\t      }\n\n\t      // unselect all selected options\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      });\n\n\t      // nothing selected?\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\");\n\n\t        // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.inputState();\n\t      }\n\t    }\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate$1(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.inputState();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret] || null);\n\t    self.setCaret(caret + 1);\n\t  }\n\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input);\n\n\t    // determine items that will be removed\n\t    const rm_items = [];\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\t      iterate$1(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\t      let rm_item;\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_item = items[self.caretPos - 1];\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_item = items[self.caretPos];\n\t      }\n\t      if (rm_item !== undefined) {\n\t        rm_items.push(rm_item);\n\t      }\n\t    }\n\t    if (!self.shouldDelete(rm_items, e)) {\n\t      return false;\n\t    }\n\t    preventDefault(e, true);\n\n\t    // perform removal\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\t    self.inputState();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Return true if the items should be deleted\n\t   */\n\t  shouldDelete(items, evt) {\n\t    const values = items.map(item => item.dataset.value);\n\n\t    // allow the callback to abort\n\t    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t      adjacent,\n\t      self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return;\n\n\t    // add or remove to active items\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        }\n\n\t        // if no active item, get items adjacent to the control input\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      }\n\n\t      // move caret to the left or right\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\t  moveCaret(direction) {}\n\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\t    var result = this.control.querySelectorAll('.active');\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\t  lock() {\n\t    this.setLocked(true);\n\t  }\n\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\t  unlock() {\n\t    this.setLocked(false);\n\t  }\n\n\t  /**\n\t   * Disable or enable user input on the control\n\t   */\n\t  setLocked(lock = this.isReadOnly || this.isDisabled) {\n\t    this.isLocked = lock;\n\t    this.refreshState();\n\t  }\n\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\t  disable() {\n\t    this.setDisabled(true);\n\t    this.close();\n\t  }\n\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\t  enable() {\n\t    this.setDisabled(false);\n\t  }\n\t  setDisabled(disabled) {\n\t    this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n\t    this.isDisabled = disabled;\n\t    this.input.disabled = disabled;\n\t    this.control_input.disabled = disabled;\n\t    this.setLocked();\n\t  }\n\t  setReadOnly(isReadOnly) {\n\t    this.isReadOnly = isReadOnly;\n\t    this.input.readOnly = isReadOnly;\n\t    this.control_input.readOnly = isReadOnly;\n\t    this.setLocked();\n\t  }\n\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\t    self._destroy();\n\t    delete self.input.tomselect;\n\t  }\n\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\t  render(templateName, data) {\n\t    var id, html;\n\t    const self = this;\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    }\n\n\t    // render markup\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\t    if (!html) {\n\t      return null;\n\t    }\n\t    html = getDom(html);\n\n\t    // add mandatory attributes\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      const value = get_hash(data[self.settings.valueField]);\n\t      setAttr(html, {\n\t        'data-value': value\n\t      });\n\n\t      // make sure we have some classes if a template is overwritten\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        });\n\n\t        // update cache\n\t        data.$div = html;\n\t        self.options[value] = data;\n\t      }\n\t    }\n\t    return html;\n\t  }\n\n\t  /**\n\t   * Type guarded rendering\n\t   *\n\t   */\n\t  _render(templateName, data) {\n\t    const html = this.render(templateName, data);\n\t    if (html == null) {\n\t      throw 'HTMLElement expected';\n\t    }\n\t    return html;\n\t  }\n\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\t  clearCache() {\n\t    iterate$1(this.options, option => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\t    self[method] = function () {\n\t      var result, result_new;\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\t      result_new = new_fn.apply(self, arguments);\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"checkbox_options\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction checkbox_options (userOptions) {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false;\n\t  const cbOptions = Object.assign({\n\t    // so that the user may add different ones as well\n\t    className: \"tomselect-checkbox\",\n\t    // the following default to the historic plugin's values\n\t    checkedClassNames: undefined,\n\t    uncheckedClassNames: undefined\n\t  }, userOptions);\n\t  var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n\t    if (toCheck) {\n\t      checkbox.checked = true;\n\t      if (cbOptions.uncheckedClassNames) {\n\t        checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t      }\n\t      if (cbOptions.checkedClassNames) {\n\t        checkbox.classList.add(...cbOptions.checkedClassNames);\n\t      }\n\t    } else {\n\t      checkbox.checked = false;\n\t      if (cbOptions.checkedClassNames) {\n\t        checkbox.classList.remove(...cbOptions.checkedClassNames);\n\t      }\n\t      if (cbOptions.uncheckedClassNames) {\n\t        checkbox.classList.add(...cbOptions.uncheckedClassNames);\n\t      }\n\t    }\n\t  };\n\n\t  // update the checkbox for an option\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input.' + cbOptions.className);\n\t      if (checkbox instanceof HTMLInputElement) {\n\t        UpdateChecked(checkbox, option.classList.contains('selected'));\n\t      }\n\t    }, 1);\n\t  };\n\n\t  // add checkbox to option template\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      if (cbOptions.className) {\n\t        checkbox.classList.add(cbOptions.className);\n\t      }\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\t      UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  });\n\n\t  // uncheck when item removed\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\t      UpdateCheckbox(option);\n\t    }\n\t  });\n\n\t  // check when item added\n\t  self.on('item_add', value => {\n\t    var option = self.getOption(value);\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      UpdateCheckbox(option);\n\t    }\n\t  });\n\n\t  // remove items when selected option is clicked\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      if (self.isLocked) return;\n\t      self.clear();\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tconst insertAfter = (referenceNode, newNode) => {\n\t  var _referenceNode$parent;\n\t  (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n\t};\n\tconst insertBefore = (referenceNode, newNode) => {\n\t  var _referenceNode$parent2;\n\t  (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n\t};\n\tconst isBefore = (referenceNode, newNode) => {\n\t  do {\n\t    var _newNode;\n\t    newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n\t    if (referenceNode == newNode) {\n\t      return true;\n\t    }\n\t  } while (newNode && newNode.previousElementSibling);\n\t  return false;\n\t};\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  let sortable = true;\n\t  let drag_item;\n\n\t  /**\n\t   * Add draggable attribute to item\n\t   */\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\t    self.settings.render.item = (data, escape) => {\n\t      const item = getDom(orig_render_item.call(self, data, escape));\n\t      setAttr(item, {\n\t        'draggable': 'true'\n\t      });\n\n\t      // prevent doc_mousedown (see tom-select.ts)\n\t      const mousedown = evt => {\n\t        if (!sortable) preventDefault(evt);\n\t        evt.stopPropagation();\n\t      };\n\t      const dragStart = evt => {\n\t        drag_item = item;\n\t        setTimeout(() => {\n\t          item.classList.add('ts-dragging');\n\t        }, 0);\n\t      };\n\t      const dragOver = evt => {\n\t        evt.preventDefault();\n\t        item.classList.add('ts-drag-over');\n\t        moveitem(item, drag_item);\n\t      };\n\t      const dragLeave = () => {\n\t        item.classList.remove('ts-drag-over');\n\t      };\n\t      const moveitem = (targetitem, dragitem) => {\n\t        if (dragitem === undefined) return;\n\t        if (isBefore(dragitem, item)) {\n\t          insertAfter(targetitem, dragitem);\n\t        } else {\n\t          insertBefore(targetitem, dragitem);\n\t        }\n\t      };\n\t      const dragend = () => {\n\t        var _drag_item;\n\t        document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n\t        (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n\t        drag_item = undefined;\n\t        var values = [];\n\t        self.control.querySelectorAll(`[data-value]`).forEach(el => {\n\t          if (el.dataset.value) {\n\t            let value = el.dataset.value;\n\t            if (value) {\n\t              values.push(value);\n\t            }\n\t          }\n\t        });\n\t        self.setValue(values);\n\t      };\n\t      addEvent(item, 'mousedown', mousedown);\n\t      addEvent(item, 'dragstart', dragStart);\n\t      addEvent(item, 'dragenter', dragOver);\n\t      addEvent(item, 'dragover', dragOver);\n\t      addEvent(item, 'dragleave', dragLeave);\n\t      addEvent(item, 'dragend', dragend);\n\t      return item;\n\t    };\n\t  });\n\t  self.hook('instead', 'lock', () => {\n\t    sortable = false;\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    sortable = true;\n\t    return orig_unlock.call(self);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction caret_position () {\n\t  var self = this;\n\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return;\n\n\t    // move caret before or after selected items\n\t    const last_active = self.getLastActive(direction);\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active');\n\n\t      // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction dropdown_input () {\n\t  const self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t    // set a placeholder in the select control\n\t    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n\t    placeholder.placeholder = self.settings.placeholder || '';\n\t    self.control.append(placeholder);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\t          self.clearActiveItems();\n\t          return;\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    });\n\n\t    // give the control_input focus when the dropdown is open\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    });\n\n\t    // prevent onBlur from closing when focus is on the control_input\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur());\n\n\t    // return focus to control to allow further keyboard input\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus({\n\t        preventScroll: true\n\t      });\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"no_active_items\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\t    self.ignoreHover = true;\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions);\n\n\t  //options.className = 'remove-single';\n\t  var self = this;\n\n\t  // override the render method to add remove button to each item\n\t  if (!options.append) {\n\t    return;\n\t  }\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\t    self.settings.render.item = (data, escape) => {\n\t      var item = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      item.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        if (self.isLocked) return;\n\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        if (!self.shouldDelete([item], evt)) return;\n\t        self.removeItem(item);\n\t        self.refreshOptions(false);\n\t        self.inputState();\n\t      });\n\t      return item;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (!self.isFocused) {\n\t      return;\n\t    }\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\t  var load_more_opt;\n\t  var default_values = [];\n\t  if (!self.settings.shouldLoadMore) {\n\t    // return true if additional results should be loaded\n\t    self.settings.shouldLoadMore = () => {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t      if (scroll_percent > 0.9) {\n\t        return true;\n\t      }\n\t      if (self.activeOption) {\n\t        var selectable = self.selectable();\n\t        var index = Array.from(selectable).indexOf(self.activeOption);\n\t        if (index >= selectable.length - 2) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  }\n\n\t  // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }];\n\n\t  // can we load more results for given query?\n\t  const canLoadMore = query => {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\t  const clearFilter = (option, value) => {\n\t    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\n\t  // set the next url that will be\n\t  self.setNextUrl = (value, next_url) => {\n\t    pagination[value] = next_url;\n\t  };\n\n\t  // getUrl() to be used in settings.load()\n\t  self.getUrl = query => {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    }\n\n\t    // if the user goes back to a previous query\n\t    // we need to load the first page again\n\t    self.clearPagination();\n\t    return self.settings.firstUrl.call(self, query);\n\t  };\n\n\t  // clear pagination\n\t  self.clearPagination = () => {\n\t    pagination = {};\n\t  };\n\n\t  // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\t    return orig_clearActiveOption.call(self);\n\t  });\n\n\t  // override the canLoad method\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\t    return canLoadMore(query);\n\t  });\n\n\t  // wrap the load\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions(clearFilter);\n\t    } else if (load_more_opt) {\n\t      const first_option = options[0];\n\t      if (first_option !== undefined) {\n\t        load_more_opt.dataset.value = first_option[self.settings.valueField];\n\t      }\n\t    }\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  });\n\n\t  // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\t      if (option) {\n\t        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t        load_more_opt = option;\n\t      }\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  });\n\n\t  // add scroll listener and default templates\n\t  self.on('initialize', () => {\n\t    default_values = Object.keys(self.options);\n\t    dropdown_content = self.dropdown_content;\n\n\t    // default templates\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: () => {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: () => {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render);\n\n\t    // watch dropdown content scroll position\n\t    dropdown_content.addEventListener('scroll', () => {\n\t      if (!self.settings.shouldLoadMore.call(self)) {\n\t        return;\n\t      }\n\n\t      // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      }\n\n\t      // don't call load() too much\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n}));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map"],"names":["global","factory","exports","module","define","amd","globalThis","self","TomSelect","this","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","apply","arrayToPattern","chars","filter","Boolean","reduce","longest","value","Math","max","unicodeLength","join","sequencePattern","array","Set","size","let","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","escape_regex","str","replace","p","Array","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","latin","latin_condensed","/","0","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","_asciifold","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","match","add","code_point_min","code_point_max","composed","String","fromCharCode","yield","code_point","generateMap","multi_char","set","sort","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","mapSequence","strings","chars_replaced","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","end","needle_parts","parts","filtered","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","old_seq","added_types","has","new_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","pos","regex","search","score","string","propToArray","key","isArray","iterate$1","object","hasOwnProperty","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","field_regex","words","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","fld","direction","sort_fld","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","iterate","getDom","tpl","jquery","HTMLElement","isHtmlString","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","spannode","nodeType","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","childNodes","test","tagName","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","data_raw","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","settings_element","option","textContent","init_select","optionsMap","group_count","$order","readData","dataset","json","addOption","group","option_data","arr","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","opt","values","Interface","instance_i","super","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","input_arg","user_settings","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isReadOnly","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","refreshTimeout","tomselect","dir","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","delay","timeout","passive_event","passive","listboxId","control_id","role","aria-haspopup","aria-expanded","aria-controls","label","label_click","focus","doc_mousedown","for","label_id","aria-labelledby","width","classes_plugins","multiple","load","clearTimeout","setTimeout","call","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","prev","selectAll","open","next","getAdjacent","setActiveOption","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","deactivate","hasFocus","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","swap","getLastActive","begin","prototype","setActiveItemClass","removeActiveItem","last_active","idx","scroll","aria-activedescendant","aria-selected","scrollToOption","behavior","height_menu","scrollTop","height_item","clientHeight","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","group_order_i","group_fragment","order_group","fragment","createDocumentFragment","$id","toString","group_order","group_options","group_html","group_heading","header","elements","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","value_old","value_new","data_old","getItem","uncacheValue","option_new","index_item","item_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","caret","lock","created","unlock","output","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","rect","left","context","scrollY","scrollX","tail","selection","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","aria-disabled","data-selectable","data-group","data-disabled","data-value","data-ts-item","hook","when","method","new_fn","orig_method","result_new","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateCheckbox","checkbox","HTMLInputElement","UpdateChecked","toCheck","checked","orig_render_option","rendered","prepend","title","button","orig_lock","orig_unlock","sortable","drag_item","orig_render_item","draggable","dragOver","moveitem","targetitem","dragitem","referenceNode","newNode","_referenceNode$parent","nextSibling","_referenceNode$parent2","_drag_item","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results","tomSelect"],"mappings":"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"}